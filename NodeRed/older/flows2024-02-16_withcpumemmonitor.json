[
    {
        "id": "a3f9d1c29dc65a55",
        "type": "tab",
        "label": "System Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "278117c520153245",
        "type": "tab",
        "label": "Node Tracker",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f4235684f17b062e",
        "type": "tab",
        "label": "MQTT Sorting Hat",
        "disabled": false,
        "info": "Receive MQTT packets\r\n  - listen for announce and LWT messages\r\n  - negotiate incoming data format (CSVtoJSON)\r\n  - negotiate packet reporting intervals\r\n    - initially accept board defaults\r\n    - but allow for pushing commands to update intervals\r\nProcess MQTT packets\r\n  - CSVtoJSON\r\n  - link out to individual flows for \r\n    error checking and processing\r\nBroadcast outgoing:\r\n  - commands\r\n  - queries",
        "env": []
    },
    {
        "id": "fb9d04a3a6c581c3",
        "type": "tab",
        "label": "Node Corrective Actions",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eb746c4729c4813b",
        "type": "tab",
        "label": "Master Display",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1adadc614d57da99",
        "type": "tab",
        "label": "Sensor IO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0b4407fe9f47f93",
        "type": "tab",
        "label": "Data Recording",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4d79f821c7bfa7e5",
        "type": "tab",
        "label": "UDP Autodiscovery",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "555b7e6ec5d6387b",
        "type": "tab",
        "label": "Simulated Inputs",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ef09b2ee949083c7",
        "type": "tab",
        "label": "Experimental",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "f26cadb4.8799",
        "type": "subflow",
        "name": "sbInstance",
        "info": "",
        "category": "Statusbar",
        "in": [
            {
                "x": 80,
                "y": 220,
                "wires": [
                    {
                        "id": "7f2d69a2.b1d518"
                    },
                    {
                        "id": "cb4138c8.c95ff8"
                    },
                    {
                        "id": "88992bb4.2d2cc8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 140,
                "wires": [
                    {
                        "id": "4586ffa0.c1826",
                        "port": 0
                    },
                    {
                        "id": "8dc5c81f.94e8c8",
                        "port": 0
                    },
                    {
                        "id": "d0265645.ccf6c8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "inputLabels": [
            "template"
        ],
        "outputLabels": [
            "connect event "
        ],
        "icon": "node-red-dashboard/ui_dropdown.png",
        "status": {
            "x": 480,
            "y": 340,
            "wires": [
                {
                    "id": "88992bb4.2d2cc8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d7cbba22.e16798",
        "type": "subflow",
        "name": "sbPolling",
        "info": "# Statusbar UI State Polling\n\nThis subflow is required to translate any event of dashborad ui_widgets into an event that can be used to trigger an upadte of a statusbar widget. Pollingis ugly but it works. ",
        "category": "Statusbar",
        "in": [
            {
                "x": 100,
                "y": 80,
                "wires": [
                    {
                        "id": "6c9938ae.4d1ac8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 220,
                "wires": [
                    {
                        "id": "c2097870.61ee98",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99",
        "inputLabels": [
            "ui event"
        ],
        "outputLabels": [
            "sbWidget event"
        ],
        "icon": "font-awesome/fa-circle-o-notch",
        "status": {
            "x": 1080,
            "y": 300,
            "wires": [
                {
                    "id": "25e06a0c.648e76",
                    "port": 0
                },
                {
                    "id": "fc47f9a0.1b2708",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3410615f3b6dc27b",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY/MM/DD",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2fce7cb011bd49b7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0b0ef72495ea76b7",
        "type": "ui_tab",
        "name": "Sensors",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4788da44ae885d26",
        "type": "ui_group",
        "name": "Compass Control",
        "tab": "0b0ef72495ea76b7",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "cd57f6c083b36098",
        "type": "ui_group",
        "name": "Compass Data",
        "tab": "0b0ef72495ea76b7",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "11e3eb0c2dee2914",
        "type": "ui_group",
        "name": "MASTER DISPLAY",
        "tab": "0b0ef72495ea76b7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dc3b3657261041d5",
        "type": "ui_group",
        "name": "HIDE ME",
        "tab": "0b0ef72495ea76b7",
        "order": 9,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7a68ba52d89cce6",
        "type": "ui_group",
        "name": "File I/O",
        "tab": "0b0ef72495ea76b7",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5ebcfd99175f8777",
        "type": "ui_tab",
        "name": "System Control",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bd4bbe08bdec7c63",
        "type": "ui_group",
        "name": "Control",
        "tab": "5ebcfd99175f8777",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "368a548923a9a211",
        "type": "ui_group",
        "name": "HIDE ME",
        "tab": "5ebcfd99175f8777",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad7b609b1a6f9c2e",
        "type": "ui_spacer",
        "z": "eb746c4729c4813b",
        "name": "spacer",
        "group": "368a548923a9a211",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "9ad53e0e62e39b88",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3fc1c323cecc5e37",
        "type": "ui_group",
        "name": "PalletSpinner",
        "tab": "0b0ef72495ea76b7",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d560ad2316caa4f9",
        "type": "ui_group",
        "name": "SNR",
        "tab": "0b0ef72495ea76b7",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ae6e4ee5ad35f1fc",
        "type": "ui_group",
        "name": "SNR-RadarPlot",
        "tab": "0b0ef72495ea76b7",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "9f8e8e421faf2dd2",
        "type": "ui_spacer",
        "z": "eb746c4729c4813b",
        "name": "spacer",
        "group": "dc3b3657261041d5",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "c89c321e9e35c05b",
        "type": "ui_spacer",
        "z": "eb746c4729c4813b",
        "name": "spacer",
        "group": "dc3b3657261041d5",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "50fb483436ced562",
        "type": "ui_spacer",
        "z": "eb746c4729c4813b",
        "name": "spacer",
        "group": "dc3b3657261041d5",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "18a767c1.885738",
        "type": "ui_group",
        "name": "Default",
        "tab": "60a46907.5b1978",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "60a46907.5b1978",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c1aa088084a08438",
        "type": "ui_group",
        "name": "Node Stats",
        "tab": "0b0ef72495ea76b7",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c57ed009d9586555",
        "type": "ui_group",
        "name": "System Charts",
        "tab": "5ebcfd99175f8777",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "8dc5c81f.94e8c8",
        "type": "ui_template",
        "z": "f26cadb4.8799",
        "group": "18a767c1.885738",
        "name": "other",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 430,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "7f2d69a2.b1d518",
        "type": "switch",
        "z": "f26cadb4.8799",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 220,
        "wires": [
            [
                "d0265645.ccf6c8"
            ],
            [
                "8dc5c81f.94e8c8"
            ]
        ]
    },
    {
        "id": "d0265645.ccf6c8",
        "type": "ui_template",
        "z": "f26cadb4.8799",
        "group": "18a767c1.885738",
        "name": "init",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 430,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cb4138c8.c95ff8",
        "type": "ui_ui_control",
        "z": "f26cadb4.8799",
        "name": "",
        "events": "all",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "4586ffa0.c1826"
            ]
        ]
    },
    {
        "id": "88992bb4.2d2cc8",
        "type": "trigger",
        "z": "f26cadb4.8799",
        "name": "",
        "op1": "ON",
        "op2": "OFF",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 320,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "4586ffa0.c1826",
        "type": "switch",
        "z": "f26cadb4.8799",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6c9938ae.4d1ac8",
        "type": "change",
        "z": "d7cbba22.e16798",
        "name": "state variable",
        "rules": [
            {
                "t": "set",
                "p": "state_var",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "1834cc63.3e0b24",
        "type": "inject",
        "z": "d7cbba22.e16798",
        "name": "polling",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "num"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "num",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "e22c352d.21cb28"
            ]
        ]
    },
    {
        "id": "e22c352d.21cb28",
        "type": "function",
        "z": "d7cbba22.e16798",
        "name": "get state variable",
        "func": "msg.payload = flow.get(\"state_var\")||0;\nmsg.topic = \"update\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "c2097870.61ee98"
            ]
        ]
    },
    {
        "id": "c2097870.61ee98",
        "type": "rbe",
        "z": "d7cbba22.e16798",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "db981e13.7d1e1"
            ]
        ]
    },
    {
        "id": "25e06a0c.648e76",
        "type": "function",
        "z": "d7cbba22.e16798",
        "name": "green",
        "func": "msg.payload = {\n    fill:\"green\",\n    shape:\"dot\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f7d44620.827af8",
        "type": "switch",
        "z": "d7cbba22.e16798",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "25e06a0c.648e76"
            ],
            [
                "fc47f9a0.1b2708"
            ]
        ]
    },
    {
        "id": "db981e13.7d1e1",
        "type": "trigger",
        "z": "d7cbba22.e16798",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "f7d44620.827af8"
            ]
        ]
    },
    {
        "id": "fc47f9a0.1b2708",
        "type": "function",
        "z": "d7cbba22.e16798",
        "name": "off",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b6cbbf22.71cac",
        "type": "comment",
        "z": "d7cbba22.e16798",
        "name": "get the state variable at 2Hz",
        "info": "",
        "x": 200,
        "y": 180,
        "wires": []
    },
    {
        "id": "1ad0d2a1.9e91bd",
        "type": "comment",
        "z": "d7cbba22.e16798",
        "name": "set the state variable",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "72b11ce870c301f9",
        "type": "exec",
        "z": "a3f9d1c29dc65a55",
        "command": "sudo ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 300,
        "wires": [
            [
                "adf5fc5b59e23fc0"
            ],
            [
                "a8b389aaca664ce0"
            ],
            [
                "4126f246a83ebe10"
            ]
        ]
    },
    {
        "id": "adf5fc5b59e23fc0",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "a8b389aaca664ce0",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 300,
        "wires": []
    },
    {
        "id": "4126f246a83ebe10",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "return code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 340,
        "wires": []
    },
    {
        "id": "3f7fe10a005f914f",
        "type": "ui_button",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "bd4bbe08bdec7c63",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "SHUTDOWN",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "shutdown now",
        "payloadType": "str",
        "topic": "systemcontrol",
        "topicType": "str",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "d084094eccc754c8"
            ]
        ]
    },
    {
        "id": "879baeabd0605a41",
        "type": "ui_button",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "bd4bbe08bdec7c63",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "REBOOT",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reboot now",
        "payloadType": "str",
        "topic": "systemcontrol",
        "topicType": "str",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "ac6da18b6ea10b9d",
                "38c370bcf908e26d"
            ]
        ]
    },
    {
        "id": "1f1fb32036c8e72b",
        "type": "ui_button",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "bd4bbe08bdec7c63",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Restart Node Red",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "node-red restart",
        "payloadType": "str",
        "topic": "systemcontrol",
        "topicType": "str",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "3efe02e3e959ae0a"
            ]
        ]
    },
    {
        "id": "da94649cccd63f44",
        "type": "ui_button",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "bd4bbe08bdec7c63",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Disable IPv6",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "sysctl -w net.ipv6.conf.default.disable_ipv6=1",
        "payloadType": "str",
        "topic": "systemcontrol",
        "topicType": "str",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "72b11ce870c301f9"
            ]
        ]
    },
    {
        "id": "ac6da18b6ea10b9d",
        "type": "ui_are_you_sure",
        "z": "a3f9d1c29dc65a55",
        "name": "rebootprompt",
        "group": "368a548923a9a211",
        "iconColor": "#ffcc00",
        "textColor": "#ffffff",
        "backgroundColor": "#000000",
        "icon": "fa fa-exclamation-triangle",
        "title": "CONFIRM REBOOT",
        "description": "Are you sure you want to reboot the system?",
        "timeoutSec": "60",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "72b11ce870c301f9",
                "99a4e8fb4c2711b6"
            ],
            [
                "9e498f69d18fc045"
            ]
        ]
    },
    {
        "id": "d084094eccc754c8",
        "type": "ui_are_you_sure",
        "z": "a3f9d1c29dc65a55",
        "name": "shutdownprompt",
        "group": "368a548923a9a211",
        "iconColor": "#ffcc00",
        "textColor": "#ffffff",
        "backgroundColor": "#000000",
        "icon": "fa fa-exclamation-triangle",
        "title": "CONFIRM SHUTDOWN",
        "description": "Are you sure you want to shutdown the system?",
        "timeoutSec": "60",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "72b11ce870c301f9"
            ],
            []
        ]
    },
    {
        "id": "3efe02e3e959ae0a",
        "type": "ui_are_you_sure",
        "z": "a3f9d1c29dc65a55",
        "name": "restartnoderedprompt",
        "group": "368a548923a9a211",
        "iconColor": "#ffcc00",
        "textColor": "#ffffff",
        "backgroundColor": "#000000",
        "icon": "fa fa-exclamation-triangle",
        "title": "CONFIRM NODE RED RESTART",
        "description": "Are you sure you want to restart the Node Red daemon?",
        "timeoutSec": "60",
        "x": 320,
        "y": 320,
        "wires": [
            [
                "72b11ce870c301f9"
            ],
            []
        ]
    },
    {
        "id": "38c370bcf908e26d",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "99a4e8fb4c2711b6",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 200,
        "wires": []
    },
    {
        "id": "9e498f69d18fc045",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 240,
        "wires": []
    },
    {
        "id": "e44375475937436b",
        "type": "exec",
        "z": "a3f9d1c29dc65a55",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 580,
        "wires": [
            [
                "76146e55c5910b11",
                "6820e573601d9bef"
            ],
            [
                "2cba5f6444371ff9"
            ],
            [
                "e27a295bae033d81"
            ]
        ]
    },
    {
        "id": "76146e55c5910b11",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 500,
        "wires": []
    },
    {
        "id": "2cba5f6444371ff9",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 600,
        "wires": []
    },
    {
        "id": "e27a295bae033d81",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "return code",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 640,
        "wires": []
    },
    {
        "id": "deab1ab1fac6ecc0",
        "type": "ui_button",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "bd4bbe08bdec7c63",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "NodeRed Proc Load",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ps -C node-red -eo cmd,%mem,%cpu,bsdstart,bsdtime | grep \"node-red\"",
        "payloadType": "str",
        "topic": "systemcontrol",
        "topicType": "str",
        "x": 460,
        "y": 580,
        "wires": [
            [
                "e44375475937436b"
            ]
        ]
    },
    {
        "id": "6820e573601d9bef",
        "type": "csv",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "sep": " ",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 770,
        "y": 560,
        "wires": [
            [
                "e3c6a6bb10513a63"
            ]
        ]
    },
    {
        "id": "f520fa4b009ab9d6",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 500,
        "wires": []
    },
    {
        "id": "e3c6a6bb10513a63",
        "type": "switch",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "property": "payload.col1",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "node-red",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 560,
        "wires": [
            [
                "f6dc71bb0be966a4"
            ]
        ]
    },
    {
        "id": "f6dc71bb0be966a4",
        "type": "change",
        "z": "a3f9d1c29dc65a55",
        "name": "labelcolumns",
        "rules": [
            {
                "t": "move",
                "p": "payload.col1",
                "pt": "msg",
                "to": "payload.processname",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.col21",
                "pt": "msg",
                "to": "payload.mempercusage",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.col23",
                "pt": "msg",
                "to": "payload.currcpuload",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.col25",
                "pt": "msg",
                "to": "payload.starttime",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.col28",
                "pt": "msg",
                "to": "payload.cpuruntime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 560,
        "wires": [
            [
                "f520fa4b009ab9d6",
                "bdd467cde1321985",
                "d586350585103004"
            ]
        ]
    },
    {
        "id": "284359a299a3b2cc",
        "type": "ui_chart",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "c57ed009d9586555",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "cpuload",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "bdd467cde1321985",
        "type": "change",
        "z": "a3f9d1c29dc65a55",
        "name": "cpuload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.currcpuload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "284359a299a3b2cc",
                "2b9b1eefe1c85271"
            ]
        ]
    },
    {
        "id": "d586350585103004",
        "type": "change",
        "z": "a3f9d1c29dc65a55",
        "name": "memload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mempercusage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 580,
        "wires": [
            [
                "5db7e65078786d2c",
                "96c298aa7b2a5661"
            ]
        ]
    },
    {
        "id": "5db7e65078786d2c",
        "type": "ui_chart",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "group": "c57ed009d9586555",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "memload",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1340,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "efe783df1b4b5585",
        "type": "trigger",
        "z": "a3f9d1c29dc65a55",
        "name": "every 1s",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "pay",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "OFF",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 260,
        "y": 580,
        "wires": [
            [
                "deab1ab1fac6ecc0"
            ]
        ]
    },
    {
        "id": "407a070517ffede6",
        "type": "ui_switch",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "label": "System Stats",
        "tooltip": "",
        "group": "c57ed009d9586555",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "sysstat",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 110,
        "y": 580,
        "wires": [
            [
                "efe783df1b4b5585"
            ]
        ]
    },
    {
        "id": "2b9b1eefe1c85271",
        "type": "switch",
        "z": "a3f9d1c29dc65a55",
        "name": "cpu over 25%",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "25",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 820,
        "y": 720,
        "wires": [
            [
                "9aeff6161cf8916d",
                "d3286fd2a07d7f73"
            ]
        ]
    },
    {
        "id": "cd11bc115065d992",
        "type": "ui_template",
        "z": "a3f9d1c29dc65a55",
        "group": "368a548923a9a211",
        "name": "switch",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "var status = {{msg.payload}};",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "7db5d1b818c2c40f"
            ]
        ]
    },
    {
        "id": "7c95113f15ec9b4c",
        "type": "inject",
        "z": "a3f9d1c29dc65a55",
        "name": "1 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 620,
        "wires": [
            [
                "deab1ab1fac6ecc0"
            ]
        ]
    },
    {
        "id": "9aeff6161cf8916d",
        "type": "change",
        "z": "a3f9d1c29dc65a55",
        "name": "switch",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 740,
        "wires": [
            [
                "945ab0c665827a5d"
            ]
        ]
    },
    {
        "id": "945ab0c665827a5d",
        "type": "debug",
        "z": "a3f9d1c29dc65a55",
        "name": "std output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 700,
        "wires": []
    },
    {
        "id": "7db5d1b818c2c40f",
        "type": "ui_ui_control",
        "z": "a3f9d1c29dc65a55",
        "name": "",
        "x": 1300,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "96c298aa7b2a5661",
        "type": "switch",
        "z": "a3f9d1c29dc65a55",
        "name": "mem over 50%",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "50",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 820,
        "y": 760,
        "wires": [
            [
                "9aeff6161cf8916d",
                "dbd57a4cf53d568a"
            ]
        ]
    },
    {
        "id": "56b0193a2e8afef5",
        "type": "ui_toast",
        "z": "a3f9d1c29dc65a55",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1170,
        "y": 780,
        "wires": []
    },
    {
        "id": "dbd57a4cf53d568a",
        "type": "change",
        "z": "a3f9d1c29dc65a55",
        "name": "alert",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Memory usage high",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 780,
        "wires": [
            [
                "56b0193a2e8afef5"
            ]
        ]
    },
    {
        "id": "d3286fd2a07d7f73",
        "type": "change",
        "z": "a3f9d1c29dc65a55",
        "name": "alert",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "CPU load high",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 700,
        "wires": [
            [
                "7803d63b46a0c5c9"
            ]
        ]
    },
    {
        "id": "7803d63b46a0c5c9",
        "type": "ui_toast",
        "z": "a3f9d1c29dc65a55",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1170,
        "y": 660,
        "wires": []
    },
    {
        "id": "b8b650e3fb14b918",
        "type": "debug",
        "z": "278117c520153245",
        "name": "base/announce",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "2d4bf5dd18ff4c52",
        "type": "mqtt in",
        "z": "278117c520153245",
        "name": "",
        "topic": "base/announce",
        "qos": "2",
        "datatype": "auto",
        "broker": "2fce7cb011bd49b7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 200,
        "wires": [
            [
                "b8b650e3fb14b918",
                "d5c625fc48b37761"
            ]
        ]
    },
    {
        "id": "a1e8ee5f514a8326",
        "type": "function",
        "z": "278117c520153245",
        "name": "Force NTP Resync?",
        "func": "var nodetime = msg.payload.time;\nvar currtime = global.get(\"g_currenttime\")/1000;\ncurrtime = Math.floor(currtime);\nvar timediff = currtime-nodetime;\nvar sender = msg.payload.sender;\nvar assembledpayload;\nvar maxtimelag = 30;\nif (timediff < -5 || timediff > maxtimelag) {\n  var topic = \"node/\" + sender;\n  msg.topic = topic;\n  assembledpayload = '{\"command\":\"ntpresync\",\"value\":\"true\",\"sender\":\"';\n  assembledpayload+= 'nodered\",\"time\":\"' + currtime + '\"}';\n  msg.payload = assembledpayload;\n  node.status({fill:\"red\",text:timediff});\n  return msg;\n} else {\n  assembledpayload = sender + \" no more than \" + maxtimelag+\"secs behind\";\n  node.status({fill:\"green\",text:assembledpayload});\n  // and don't return a message so nothing gets transmitted\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 80,
        "wires": [
            [
                "9fa65145602f3ad0"
            ]
        ]
    },
    {
        "id": "9fa65145602f3ad0",
        "type": "trigger",
        "z": "278117c520153245",
        "name": "5sec lockout",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 950,
        "y": 80,
        "wires": [
            [
                "d70bd917600564b7",
                "80592c8191b969b0"
            ]
        ]
    },
    {
        "id": "80592c8191b969b0",
        "type": "debug",
        "z": "278117c520153245",
        "name": "NTP Resync Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 1220,
        "y": 100,
        "wires": []
    },
    {
        "id": "d70bd917600564b7",
        "type": "mqtt out",
        "z": "278117c520153245",
        "name": "557c87",
        "topic": "node/557c87",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2fce7cb011bd49b7",
        "x": 1180,
        "y": 40,
        "wires": []
    },
    {
        "id": "d5c625fc48b37761",
        "type": "function",
        "z": "278117c520153245",
        "name": "lookup index",
        "func": "var sender = msg.payload;\nvar nodearray = flow.get(\"nodearray\");\nvar iterator = nodearray.keys();\nvar position = -1;\nfor (var key of iterator) {\n  if (nodearray[key].ID == sender) {\n      position = key;\n  }\n}\nif (position == -1) {\n    var newnode = {\n      ID: sender,\n      CurrWiFi: 0,\n      AvgWiFi: 0,\n      MsgCount: 0,\n      LastMsg: 0\n    };\n    nodearray.push(newnode);\n    position = nodearray.length - 1;\n    node.status({fill:\"yellow\",text:\"ADDING: \"+position});\n} else {\n    node.status({fill:\"green\",text:position});\n}\nmsg.payload = position;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar nodearray = new Array();\nflow.set(\"nodearray\",nodearray);",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            [
                "0bcc8f0b3c01da52"
            ]
        ]
    },
    {
        "id": "0bcc8f0b3c01da52",
        "type": "debug",
        "z": "278117c520153245",
        "name": "lookup",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "6cf059a672f02aa7",
        "type": "link in",
        "z": "278117c520153245",
        "name": "V_0_0_6 Header",
        "links": [
            "1d63afa563028eef"
        ],
        "x": 255,
        "y": 360,
        "wires": [
            [
                "14b3f67f8207bca8",
                "480d1f7131edbeb4"
            ]
        ]
    },
    {
        "id": "480d1f7131edbeb4",
        "type": "function",
        "z": "278117c520153245",
        "name": "lookup index",
        "func": "var sender = msg.payload.sender;\nvar nodearray = flow.get(\"nodearray\");\nvar iterator = nodearray.keys();\nvar position = -1;\nfor (var key of iterator) {\n  if (nodearray[key].ID == sender) {\n      position = key;\n  }\n}\nif (position == -1) {\n    var newnode = {\n      ID: sender,\n      CurrWiFi: Number(msg.payload.WiFiStr),\n      AvgWiFi: Number(msg.payload.WiFiStr),\n      MsgCount: Number(msg.payload.MsgCount),\n      LastMsg: Number(msg.payload.time)\n    };\n    nodearray.push(newnode);\n    position = nodearray.length - 1;\n    node.status({fill:\"yellow\",text:\"ADDING: \"+position});\n} else {\n    node.status({fill:\"green\",text:position});\n    nodearray[position].CurrWiFi = Number(msg.payload.WiFiStr);\n    nodearray[position].MsgCount = Number(msg.payload.MsgCount);\n    nodearray[position].LastMsg = Number(msg.payload.time);\n    var wifiavg = nodearray[position].AvgWiFi || 0;\n    wifiavg*= (nodearray[position].MsgCount-1);\n    wifiavg += nodearray[position].CurrWiFi;\n    wifiavg = Math.floor(wifiavg/nodearray[position].MsgCount);\n    nodearray[position].AvgWiFi = wifiavg;\n}\nmsg.payload.position = position;\nmsg.payload.sender = sender;\nmsg.payload.CurrWiFi = nodearray[position].CurrWiFi;\nmsg.payload.MsgCount = nodearray[position].MsgCount;\nmsg.payload.AvgWiFi = nodearray[position].AvgWiFi;\nmsg.payload.LastMsg = nodearray[position].LastMsg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 360,
        "wires": [
            [
                "27aa030caa55d935"
            ]
        ]
    },
    {
        "id": "14b3f67f8207bca8",
        "type": "debug",
        "z": "278117c520153245",
        "name": "lookup",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 390,
        "y": 300,
        "wires": []
    },
    {
        "id": "27aa030caa55d935",
        "type": "change",
        "z": "278117c520153245",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "nodearray",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 360,
        "wires": [
            [
                "d031b56c6b918297",
                "c5b68c72ff21009a"
            ]
        ]
    },
    {
        "id": "d031b56c6b918297",
        "type": "debug",
        "z": "278117c520153245",
        "name": "lookup",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "c5b68c72ff21009a",
        "type": "template",
        "z": "278117c520153245",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{! outputs list of prices }}\n{{#payload}}\n- {{ID}}: Curr {{CurrWiFi}}, Avg {{AvgWiFi}}, MsgCount {{MsgCount}} <br>\n{{/payload}}",
        "output": "str",
        "x": 840,
        "y": 360,
        "wires": [
            [
                "4f6483c8d8339d4b",
                "409469fabbe21d8f"
            ]
        ]
    },
    {
        "id": "4f6483c8d8339d4b",
        "type": "debug",
        "z": "278117c520153245",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "409469fabbe21d8f",
        "type": "ui_text",
        "z": "278117c520153245",
        "group": "c1aa088084a08438",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1030,
        "y": 360,
        "wires": []
    },
    {
        "id": "6c133cd560f07a69",
        "type": "csv",
        "z": "f4235684f17b062e",
        "name": "RemoteBMPParser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "bmpmillis,bmppacketnum,bmpwifirssi,temp-C,pressure-Pa,altitude-m",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1470,
        "y": 720,
        "wires": [
            [
                "b2a793bc7f9d5899"
            ]
        ]
    },
    {
        "id": "b2a793bc7f9d5899",
        "type": "link out",
        "z": "f4235684f17b062e",
        "name": "JSON_RemoteBMP_Raw",
        "mode": "link",
        "links": [],
        "x": 1635,
        "y": 720,
        "wires": []
    },
    {
        "id": "5eee754704ce5977",
        "type": "link out",
        "z": "f4235684f17b062e",
        "name": "JSON_HealthPacket_Raw",
        "mode": "link",
        "links": [],
        "x": 875,
        "y": 620,
        "wires": []
    },
    {
        "id": "d6c0b0a80b39a147",
        "type": "link out",
        "z": "f4235684f17b062e",
        "name": "JSON_Azimuth_Raw",
        "mode": "link",
        "links": [],
        "x": 815,
        "y": 720,
        "wires": []
    },
    {
        "id": "729b34d3aee78616",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "Packet Parsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 940,
        "y": 660,
        "wires": []
    },
    {
        "id": "7d4c25306c86ce3f",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "Azimuth Parsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 880,
        "y": 760,
        "wires": []
    },
    {
        "id": "8d06843379c6e8c8",
        "type": "mqtt in",
        "z": "f4235684f17b062e",
        "name": "",
        "topic": "node/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "2fce7cb011bd49b7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 70,
        "y": 580,
        "wires": [
            [
                "b7668d5cbc7099ab",
                "271c4ccd7ced308b"
            ]
        ]
    },
    {
        "id": "271c4ccd7ced308b",
        "type": "switch",
        "z": "f4235684f17b062e",
        "name": "Sort by topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "node/data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/ponyexpress",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/azimuth",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/temppress",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 230,
        "y": 580,
        "wires": [
            [
                "7141139e71ca0db1"
            ],
            [
                "412c8eae5e44d266",
                "b345a3d999a739bc"
            ],
            [
                "7f2364c011d90b06"
            ],
            [],
            []
        ],
        "inputLabels": [
            "all JSON"
        ],
        "outputLabels": [
            "data",
            "packet",
            "azimuth",
            "temppress",
            "all others"
        ]
    },
    {
        "id": "b7668d5cbc7099ab",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "node/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "_topic",
        "statusType": "msg",
        "x": 210,
        "y": 660,
        "wires": []
    },
    {
        "id": "b345a3d999a739bc",
        "type": "csv",
        "z": "f4235684f17b062e",
        "name": "Packet Parser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Loc,4300PacketNum,GroupID,UnitID,TempC,Voltage,RcvNoise,RcvRSSI,LastRSSI,LastNoise,GPS",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": true,
        "x": 700,
        "y": 640,
        "wires": [
            [
                "5eee754704ce5977",
                "729b34d3aee78616"
            ]
        ]
    },
    {
        "id": "7f2364c011d90b06",
        "type": "csv",
        "z": "f4235684f17b062e",
        "name": "AzimuthParser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Azimuthmillis,Azimuth,MagnetStr",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 660,
        "y": 740,
        "wires": [
            [
                "d6c0b0a80b39a147",
                "7d4c25306c86ce3f"
            ]
        ]
    },
    {
        "id": "7cbbedba9079f2f2",
        "type": "json",
        "z": "f4235684f17b062e",
        "name": "Compass Parser",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1470,
        "y": 440,
        "wires": [
            [
                "5a56c85432f3f128",
                "8af2d0db16b858dc"
            ]
        ]
    },
    {
        "id": "ebb4013108104e1f",
        "type": "ui_text",
        "z": "f4235684f17b062e",
        "group": "4788da44ae885d26",
        "order": 10,
        "width": 6,
        "height": 5,
        "name": "",
        "label": "Readout",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1440,
        "y": 820,
        "wires": []
    },
    {
        "id": "5a56c85432f3f128",
        "type": "link out",
        "z": "f4235684f17b062e",
        "name": "JSON_Compass_Raw",
        "mode": "link",
        "links": [
            "352bec218510accb"
        ],
        "x": 1635,
        "y": 420,
        "wires": []
    },
    {
        "id": "8af2d0db16b858dc",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "Compass Parsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1710,
        "y": 460,
        "wires": []
    },
    {
        "id": "dc6ab63af43593d6",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "NO MATCH FOUND",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 780,
        "wires": []
    },
    {
        "id": "8b58255862f3c14f",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 540,
        "wires": []
    },
    {
        "id": "027018dc83b8074a",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "Extract PacketRcvd",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.PacketRcvd",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "17671b148fa60be2"
            ]
        ]
    },
    {
        "id": "f591b4df13e236fc",
        "type": "inject",
        "z": "f4235684f17b062e",
        "name": "Packet V2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "H,2FSK,4ED836B2,1F7173A8,RESP,3557,12,7,34.1,3.255,-22,-89,2017,4,24,17,29,23,38.3304,-77.02568",
        "payloadType": "str",
        "x": 140,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "090aea128c583d20",
        "type": "inject",
        "z": "f4235684f17b062e",
        "name": "Packet V1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "H,2FSK,4ED836B2,1F7173A8,RESP,3557,12,7,34.1,3.255,-22,-89,2017,4,24,17,29,23,38.3304,-77.02568",
        "payloadType": "str",
        "x": 140,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1d63afa563028eef",
        "type": "link out",
        "z": "f4235684f17b062e",
        "name": "V_0_0_6 Header",
        "mode": "link",
        "links": [
            "03320f2801868628",
            "6cf059a672f02aa7"
        ],
        "x": 755,
        "y": 340,
        "wires": []
    },
    {
        "id": "403e94d2b8f9dfa4",
        "type": "switch",
        "z": "f4235684f17b062e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "PacketRcvd",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "xMC5883",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "BMP280",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "MPU6050",
                "vt": "str"
            },
            {
                "t": "hask",
                "v": "AS6500",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 790,
        "y": 480,
        "wires": [
            [
                "027018dc83b8074a"
            ],
            [
                "c680a54b2679e1fc"
            ],
            [
                "f026874bed01227e"
            ],
            [
                "2e84c18d7c1c074c"
            ],
            [
                "425e1dcfe1a76428"
            ]
        ],
        "outputLabels": [
            "PacketRcvd",
            "xMC5883",
            "BMP280",
            "MPU6050",
            "AS6500"
        ]
    },
    {
        "id": "c680a54b2679e1fc",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "Extract xMC5883",
        "rules": [
            {
                "t": "set",
                "p": "payload.xMC5883",
                "pt": "msg",
                "to": "payload.xMC5883.heading",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 440,
        "wires": [
            [
                "6263771c270c70f1"
            ]
        ]
    },
    {
        "id": "f026874bed01227e",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "Extract BMP280",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.BMP280",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "65d01690bfcb2dec"
            ]
        ]
    },
    {
        "id": "2e84c18d7c1c074c",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "Extract MPU6050",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.MPU6050",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "c493963d799e886d"
            ]
        ]
    },
    {
        "id": "425e1dcfe1a76428",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "Extract AS6500",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.AS6500",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "8806369f72e658f0"
            ]
        ]
    },
    {
        "id": "17671b148fa60be2",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 400,
        "wires": []
    },
    {
        "id": "6263771c270c70f1",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 440,
        "wires": []
    },
    {
        "id": "65d01690bfcb2dec",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 480,
        "wires": []
    },
    {
        "id": "c493963d799e886d",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 520,
        "wires": []
    },
    {
        "id": "8806369f72e658f0",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 560,
        "wires": []
    },
    {
        "id": "14f0a29704cf8e12",
        "type": "debug",
        "z": "f4235684f17b062e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 540,
        "wires": []
    },
    {
        "id": "412c8eae5e44d266",
        "type": "csv",
        "z": "f4235684f17b062e",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "8b58255862f3c14f"
            ]
        ]
    },
    {
        "id": "7141139e71ca0db1",
        "type": "json",
        "z": "f4235684f17b062e",
        "name": "Parser",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "5713b87793b518d7",
                "91dfd21dd5d87fba"
            ]
        ]
    },
    {
        "id": "5713b87793b518d7",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "header only",
        "rules": [
            {
                "t": "delete",
                "p": "payload.payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "1d63afa563028eef"
            ]
        ]
    },
    {
        "id": "91dfd21dd5d87fba",
        "type": "change",
        "z": "f4235684f17b062e",
        "name": "data only",
        "rules": [
            {
                "t": "set",
                "p": "payload.payload.sender",
                "pt": "msg",
                "to": "payload.sender",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 480,
        "wires": [
            [
                "403e94d2b8f9dfa4",
                "14f0a29704cf8e12"
            ]
        ]
    },
    {
        "id": "17d71a82ab709e18",
        "type": "function",
        "z": "fb9d04a3a6c581c3",
        "name": "Force NTP Resync?",
        "func": "var nodetime = msg.payload.time;\nvar currtime = global.get(\"g_currenttime\")/1000;\ncurrtime = Math.floor(currtime);\nvar timediff = currtime-nodetime;\nvar sender = msg.payload.sender;\nvar assembledpayload;\nvar maxtimelag = 30;\nif (timediff < -5 || timediff > maxtimelag) {\n  var topic = \"node/\" + sender;\n  msg.topic = topic;\n  assembledpayload = '{\"command\":\"ntpresync\",\"value\":\"true\",\"sender\":\"';\n  assembledpayload+= 'nodered\",\"time\":\"' + currtime + '\"}';\n  msg.payload = assembledpayload;\n  node.status({fill:\"red\",text:timediff});\n  return msg;\n} else {\n  assembledpayload = sender + \" no more than \" + maxtimelag+\"secs behind\";\n  node.status({fill:\"green\",text:assembledpayload});\n  // and don't return a message so nothing gets transmitted\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            [
                "6e8fbbf27f645007"
            ]
        ]
    },
    {
        "id": "6e8fbbf27f645007",
        "type": "trigger",
        "z": "fb9d04a3a6c581c3",
        "name": "5sec lockout",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "4e15bf8c8b271f17",
                "af4637febc77d100"
            ]
        ]
    },
    {
        "id": "4e15bf8c8b271f17",
        "type": "mqtt out",
        "z": "fb9d04a3a6c581c3",
        "name": "Send Command",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2fce7cb011bd49b7",
        "x": 940,
        "y": 140,
        "wires": []
    },
    {
        "id": "03320f2801868628",
        "type": "link in",
        "z": "fb9d04a3a6c581c3",
        "name": "V_0_0_6 Header",
        "links": [
            "1d63afa563028eef"
        ],
        "x": 205,
        "y": 180,
        "wires": [
            [
                "1a3ef964e0389e2f",
                "17d71a82ab709e18"
            ]
        ]
    },
    {
        "id": "1a3ef964e0389e2f",
        "type": "debug",
        "z": "fb9d04a3a6c581c3",
        "name": "V0_0_6 Header Input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "af4637febc77d100",
        "type": "debug",
        "z": "fb9d04a3a6c581c3",
        "name": "NTP Resync Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "msg",
        "x": 960,
        "y": 200,
        "wires": []
    },
    {
        "id": "07d0adac4c049a06",
        "type": "rbe",
        "z": "fb9d04a3a6c581c3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 390,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "da8a0a9f8a5725fd",
        "type": "function",
        "z": "fb9d04a3a6c581c3",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9929f23055e4c553",
        "type": "inject",
        "z": "eb746c4729c4813b",
        "name": "current time",
        "props": [
            {
                "p": "msg.payload.time",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 720,
        "y": 180,
        "wires": [
            [
                "4942e9cba25b7cd9",
                "04b5a01b62208ccd"
            ]
        ]
    },
    {
        "id": "6dc7aca57cf35c2d",
        "type": "ui_text",
        "z": "eb746c4729c4813b",
        "group": "11e3eb0c2dee2914",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "STATUS",
        "label": "",
        "format": "{{payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1300,
        "y": 280,
        "wires": []
    },
    {
        "id": "5890b780fa8bd654",
        "type": "ui_button",
        "z": "eb746c4729c4813b",
        "name": "",
        "group": "11e3eb0c2dee2914",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "START",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "START",
        "payloadType": "str",
        "topic": "recordingcontrol",
        "topicType": "str",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "828f769dd1270337",
                "19316da193c048de",
                "399a6fa491842b79"
            ]
        ]
    },
    {
        "id": "daf3606b52adbb7e",
        "type": "ui_button",
        "z": "eb746c4729c4813b",
        "name": "",
        "group": "11e3eb0c2dee2914",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "STOP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "STOP",
        "payloadType": "str",
        "topic": "recordingcontrol",
        "topicType": "str",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "4342d6f1ab1a84cd"
            ]
        ]
    },
    {
        "id": "e502cac41022dfa2",
        "type": "function",
        "z": "eb746c4729c4813b",
        "name": "Runtime",
        "func": "var starttime = flow.get(\"teststarttime\");\nvar currtime = msg.payload.time;\nvar runtime = (currtime - starttime) / 1000;\nvar remainder = 0;\nvar days = Math.floor(runtime / (60 * 60 * 24));\nif (days == 0) {\n    remainder = runtime;\n} else {\n    remainder = runtime % days;\n}\nvar hours = Math.floor(remainder / (60 * 60));\nif (hours == 0) {\n    remainder = runtime;\n} else {\n    remainder = runtime % hours;\n}\nvar minutes = Math.floor(remainder / (60));\nif (minutes == 0) {\n    remainder = runtime;\n} else {\n    remainder = runtime % minutes;\n}\nvar seconds = Math.floor(remainder);\nvar formattedTime = days+\"d \"+hours+\"h \"+minutes+\"m \"+seconds+\"s\";\nmsg.payload = formattedTime;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 220,
        "wires": [
            [
                "d9142d717aa8e096"
            ]
        ]
    },
    {
        "id": "d9142d717aa8e096",
        "type": "ui_text",
        "z": "eb746c4729c4813b",
        "group": "11e3eb0c2dee2914",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "ELAPSED",
        "format": "{{payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1310,
        "y": 220,
        "wires": []
    },
    {
        "id": "4942e9cba25b7cd9",
        "type": "q-gate",
        "z": "eb746c4729c4813b",
        "name": "recording gate",
        "controlTopic": "recordingcontrol",
        "defaultState": "closed",
        "openCmd": "START",
        "closeCmd": "STOP",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "1",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "memory",
        "x": 980,
        "y": 220,
        "wires": [
            [
                "e502cac41022dfa2"
            ]
        ]
    },
    {
        "id": "2dbafed285a8c1a1",
        "type": "function",
        "z": "eb746c4729c4813b",
        "name": "Set Start Time",
        "func": "let msginput = msg.payload;\nvar currtime = global.get(\"g_currenttime\") || 0;\nnode.status({text:msginput});\nif (msginput === \"START\") {\n  flow.set(\"teststarttime\",currtime);\n}\nmsg.payload = msginput;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 260,
        "wires": [
            [
                "4942e9cba25b7cd9",
                "6dc7aca57cf35c2d"
            ]
        ]
    },
    {
        "id": "4342d6f1ab1a84cd",
        "type": "ui_are_you_sure",
        "z": "eb746c4729c4813b",
        "name": "stopprompt",
        "group": "dc3b3657261041d5",
        "iconColor": "#ffcc00",
        "textColor": "#ffffff",
        "backgroundColor": "#000000",
        "icon": "fa fa-exclamation-triangle",
        "title": "STOP RECORDING",
        "description": "Are you sure you want to stop recording data?",
        "timeoutSec": "60",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "828f769dd1270337",
                "5f8379490588856f",
                "d473a018d0be0b7c"
            ],
            []
        ]
    },
    {
        "id": "828f769dd1270337",
        "type": "function",
        "z": "eb746c4729c4813b",
        "name": "join",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "2dbafed285a8c1a1",
                "f60ecc23e744d99b"
            ]
        ],
        "icon": "node-red/join.svg"
    },
    {
        "id": "f60ecc23e744d99b",
        "type": "link out",
        "z": "eb746c4729c4813b",
        "name": "teststatus",
        "mode": "link",
        "links": [
            "1adef04a61d395d9",
            "82b60100d318e9c9"
        ],
        "x": 715,
        "y": 320,
        "wires": []
    },
    {
        "id": "19316da193c048de",
        "type": "change",
        "z": "eb746c4729c4813b",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 100,
        "wires": [
            [
                "ddf6d3136f083bd6"
            ]
        ]
    },
    {
        "id": "399a6fa491842b79",
        "type": "change",
        "z": "eb746c4729c4813b",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "d451d7b7a848f358"
            ]
        ]
    },
    {
        "id": "5f8379490588856f",
        "type": "change",
        "z": "eb746c4729c4813b",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 420,
        "wires": [
            [
                "cee535f3a5468122"
            ]
        ]
    },
    {
        "id": "d473a018d0be0b7c",
        "type": "change",
        "z": "eb746c4729c4813b",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "99e055f8f7359f07"
            ]
        ]
    },
    {
        "id": "ddf6d3136f083bd6",
        "type": "link out",
        "z": "eb746c4729c4813b",
        "name": "startdisablesignal",
        "mode": "link",
        "links": [
            "b0c9df281f380983",
            "ce0a480d8214a8af",
            "9064f9f5fd97fa2d",
            "f170f5985199868a",
            "2d47d40f016f1df8",
            "b2f998c820f5777a",
            "2244b160ccf0839d",
            "db8ba2b5aa4029e9",
            "7e8899d80a8aa97f",
            "16a6fa0b2450d604",
            "0933d58f68f00f95"
        ],
        "x": 705,
        "y": 100,
        "wires": []
    },
    {
        "id": "cee535f3a5468122",
        "type": "link out",
        "z": "eb746c4729c4813b",
        "name": "stopdisablesignal",
        "mode": "link",
        "links": [
            "c8540407d1e6ac98",
            "d981950f36c0eb1f"
        ],
        "x": 725,
        "y": 420,
        "wires": []
    },
    {
        "id": "99e055f8f7359f07",
        "type": "link out",
        "z": "eb746c4729c4813b",
        "name": "stopenablesignal",
        "mode": "link",
        "links": [
            "cdeaf50ebb459a53",
            "9804c14155814e0a",
            "40a51ade16f746f3",
            "2890af46c222f42c",
            "42f081ca34838bca",
            "4109827b3f0ce150",
            "f34421ef94daf75e",
            "42ca4707d4a229cd",
            "17e9b3ec4ea42b59",
            "bc23dca587d2ead3",
            "9256d2ce39e8b2df"
        ],
        "x": 725,
        "y": 380,
        "wires": []
    },
    {
        "id": "d451d7b7a848f358",
        "type": "link out",
        "z": "eb746c4729c4813b",
        "name": "startenablesignal",
        "mode": "link",
        "links": [
            "5d813b1f0b6aa4de",
            "25267f3a1c9ca0ec"
        ],
        "x": 705,
        "y": 140,
        "wires": []
    },
    {
        "id": "b0c9df281f380983",
        "type": "link in",
        "z": "eb746c4729c4813b",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 295,
        "y": 180,
        "wires": [
            [
                "5890b780fa8bd654"
            ]
        ]
    },
    {
        "id": "c8540407d1e6ac98",
        "type": "link in",
        "z": "eb746c4729c4813b",
        "name": "stopdisable",
        "links": [
            "cee535f3a5468122"
        ],
        "x": 155,
        "y": 340,
        "wires": [
            [
                "daf3606b52adbb7e"
            ]
        ]
    },
    {
        "id": "5d813b1f0b6aa4de",
        "type": "link in",
        "z": "eb746c4729c4813b",
        "name": "startenable",
        "links": [
            "d451d7b7a848f358"
        ],
        "x": 155,
        "y": 300,
        "wires": [
            [
                "daf3606b52adbb7e"
            ]
        ]
    },
    {
        "id": "cdeaf50ebb459a53",
        "type": "link in",
        "z": "eb746c4729c4813b",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 295,
        "y": 220,
        "wires": [
            [
                "5890b780fa8bd654"
            ]
        ]
    },
    {
        "id": "04b5a01b62208ccd",
        "type": "simpletime",
        "z": "eb746c4729c4813b",
        "name": "",
        "mydate": true,
        "myymd": true,
        "myyear": true,
        "mymonth": true,
        "mymonthn": true,
        "mydom": true,
        "mydoy": true,
        "myday": true,
        "myhourpm": true,
        "myhour": true,
        "mytime": true,
        "mytimes": true,
        "myminute": true,
        "myminutes": true,
        "mysecond": true,
        "mymillis": true,
        "myepoch": true,
        "myrawdate": true,
        "mypm": true,
        "x": 970,
        "y": 120,
        "wires": [
            [
                "52679671baa1ba6f",
                "653a8986dbe01352",
                "4b4aa1082f527a51"
            ]
        ]
    },
    {
        "id": "52679671baa1ba6f",
        "type": "debug",
        "z": "eb746c4729c4813b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 80,
        "wires": []
    },
    {
        "id": "653a8986dbe01352",
        "type": "change",
        "z": "eb746c4729c4813b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "myymd",
                "pt": "global",
                "to": "myymd",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "mytimes",
                "pt": "global",
                "to": "mytimes",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "g_currenttime",
                "pt": "global",
                "to": "payload.time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4b4aa1082f527a51",
        "type": "function",
        "z": "eb746c4729c4813b",
        "name": "",
        "func": "var filenameDTG = msg.myymd+\"H\"+msg.myhour+\"M\"+msg.myminute+\"S\"+msg.mysecond;\nglobal.set(\"filenameDTG\",filenameDTG);\nvar humanDTG = msg.myymd+\" \"+msg.mytimes;\nglobal.set(\"humanDTG\",humanDTG);\nmsg.payload = humanDTG;\nnode.status({fill:\"green\",text:humanDTG});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9b45e21d18cd5093",
        "type": "ui_template",
        "z": "eb746c4729c4813b",
        "group": "bd4bbe08bdec7c63",
        "name": "TopBar",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n\nvar home = new Object();\nhome.payload = 'Home'; // This is the payload that goes out\n    \nvar theScope = scope;\nvar clockInterval;\n    \n$(function () {\n    if (clockInterval) return;\n    \n    //add clock\n    var divClock = $('<div />');\n    var p = $('<p />');\n    divClock.append(p);\n    divClock[0].style.margin = '15px';\n   \n    function addZero(i) {\n        if (i < 10) {\n            i = \"0\" + i\n        }\n        return i;\n    }\n\nfunction formatDate(date) {\n        var year = date.getFullYear();\n        var month = addZero(date.getMonth());\n        var day = date.getDate();\n        var hour = addZero(date.getHours());\n        var minute = addZero(date.getMinutes());\n        var second = addZero(date.getSeconds());\n        return year + '-' + month + '-' + day + ' ' + \" \" + hour +':' + minute + ':' + second;\n    }\n \n    function displayTime() {\n        p.text( formatDate( new Date() ) );\n    }\n    \n    clockInterval = setInterval(displayTime, 1000);\n    \n    // add Text\n    var divText = $('<div />');\n    var displaytext = \"PANOPTES\";\n    var t = document.createTextNode(displaytext); // <== add title here\n    divText.append(t)\n    divText[0].style.margin = '40px auto';\n    divText[0].style.size = '40';\n    \n    // add button\n    var divButton = $('<div />');\n    var button = document.createElement(\"BUTTON\");\n    var b = document.createTextNode(\"Home Screen\")\n    button.height=40;\n    button.width=40;\n    button.appendChild(b);\n    button.addEventListener(\"click\", doIT.bind(null,home));\n    divButton.append(button);\n    \n    //\n    // Add Button picture button\n    //\n    \n    //var divPicButton =$('<div />'); //old statement from forum.\n    var divPicButton = document.createElement (\"div\");\n    var btn_Home = document.createElement(\"BUTTON\");\n    btn_Home.setAttribute(\"class\", \"btnHome_class\");\n    \n    var pic = new Image();\n    pic.src = \"/Home1.png\"; // <== add path and filename of picture here\n    pic.height=40;\n    pic.width=40;\n    btn_Home.appendChild(pic);\n    pic.addEventListener(\"click\", doThis.bind(null,home));\n    divPicButton.append(btn_Home);\n        \n    //add to toolbar when it's available\n    var addToToolbarTimer;\n     \n    function addToToolbar() {\n    \n        var toolbar = $('.md-toolbar-tools');\n        if(!toolbar.length) return;\n    \n        // toolbar.append(divButton);\n        toolbar.append(divText);\n        toolbar.append(divClock);\n        //toolbar.append(divPicButton)\n        clearInterval(addToToolbarTimer);\n    }\n    \n    addToToolbarTimer = setInterval(addToToolbar, 100);\n    \n    function doIT(m){\n        theScope.send( m )\n    }\n\n    function doThis(m){\n        theScope.send( m )\n    }\n\n});\n    \n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1180,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b76374f9970ba886",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "node/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "_topic",
        "statusType": "msg",
        "x": 230,
        "y": 440,
        "wires": []
    },
    {
        "id": "0c5563b603dfae5d",
        "type": "ui_gauge",
        "z": "1adadc614d57da99",
        "name": "heading",
        "group": "cd57f6c083b36098",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "compass",
        "title": "gauge",
        "label": "degrees",
        "format": "{{payload.payload.xMC5883.heading}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 720,
        "y": 100,
        "wires": []
    },
    {
        "id": "b190760e5ea219f4",
        "type": "comment",
        "z": "1adadc614d57da99",
        "name": "JSONATA to check for keys",
        "info": "[{\"id\":\"dd3930f9.05cc6\",\"type\":\"change\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"payload\",\"pt\":\"msg\",\"to\":\"$each(\\t   payload,\\t   function($v, $i) {$v = \\\"\\\" ? {$i: false} : {$i: $v}}\\t)\",\"tot\":\"jsonata\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":510,\"y\":1320,\"wires\":[[\"d6d6a27b.5b5538\"]]},{\"id\":\"3c8ce754.fda3e\",\"type\":\"inject\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"props\":[{\"p\":\"payload\"},{\"p\":\"topic\",\"vt\":\"str\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"{\\\"1\\\": true, \\\"2\\\": \\\"\\\", \\\"3\\\": false}\",\"payloadType\":\"json\",\"x\":320,\"y\":1320,\"wires\":[[\"dd3930f9.05cc6\"]]},{\"id\":\"d6d6a27b.5b5538\",\"type\":\"debug\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"true\",\"targetType\":\"full\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":710,\"y\":1320,\"wires\":[]}]",
        "x": 140,
        "y": 20,
        "wires": []
    },
    {
        "id": "fe362dc5f3c61117",
        "type": "comment",
        "z": "1adadc614d57da99",
        "name": "template node",
        "info": "[{\"id\":\"d5cc6037.6bc238\",\"type\":\"change\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"rules\":[{\"t\":\"set\",\"p\":\"payload\",\"pt\":\"msg\",\"to\":\"$count(\\t   $filter(\\t       $split(payload, \\\"\\\\n\\\"),\\t       function($v){$count($split($v,\\\"=\\\")) <= 1}\\t)\\t) < 2 ? payload : false \",\"tot\":\"jsonata\"}],\"action\":\"\",\"property\":\"\",\"from\":\"\",\"to\":\"\",\"reg\":false,\"x\":720,\"y\":1640,\"wires\":[[\"d6d6a27b.5b5538\"]]},{\"id\":\"e56da466.e65728\",\"type\":\"inject\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"props\":[{\"p\":\"payload\"},{\"p\":\"topic\",\"vt\":\"str\"}],\"repeat\":\"\",\"crontab\":\"\",\"once\":false,\"onceDelay\":0.1,\"topic\":\"\",\"payload\":\"[\\\"0x1\\\",\\\"0x67\\\",\\\"0x33\\\",\\\"0x1\\\",\\\"0x2\\\",\\\"0x68\\\",\\\"0x6e\\\"]\",\"payloadType\":\"json\",\"x\":310,\"y\":1640,\"wires\":[[\"4e82f442.bde2e4\"]]},{\"id\":\"4e82f442.bde2e4\",\"type\":\"template\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"field\":\"payload\",\"fieldType\":\"msg\",\"format\":\"handlebars\",\"syntax\":\"mustache\",\"template\":\"[Session]\\nkey1=value1\\nkey2\\nkey3=\\nkey4=value4[EOF]\",\"output\":\"str\",\"x\":470,\"y\":1640,\"wires\":[[\"d5cc6037.6bc238\"]]},{\"id\":\"d6d6a27b.5b5538\",\"type\":\"debug\",\"z\":\"7760f563.ea0324\",\"name\":\"\",\"active\":true,\"tosidebar\":true,\"console\":false,\"tostatus\":false,\"complete\":\"true\",\"targetType\":\"full\",\"statusVal\":\"\",\"statusType\":\"auto\",\"x\":710,\"y\":1320,\"wires\":[]}]",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "327c062c9e29b361",
        "type": "mqtt in",
        "z": "1adadc614d57da99",
        "name": "",
        "topic": "node/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "2fce7cb011bd49b7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 70,
        "y": 400,
        "wires": [
            [
                "86d40a5236d321de",
                "b76374f9970ba886"
            ]
        ]
    },
    {
        "id": "d264fca12369cd67",
        "type": "mqtt out",
        "z": "1adadc614d57da99",
        "name": "557c87",
        "topic": "node/557c87",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2fce7cb011bd49b7",
        "x": 1300,
        "y": 800,
        "wires": []
    },
    {
        "id": "566d870183c6c4b0",
        "type": "ui_button",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "4788da44ae885d26",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "NTP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\":\"ntpresync\",\"value\":\"true\"}",
        "payloadType": "str",
        "topic": "node/557c87",
        "topicType": "str",
        "x": 710,
        "y": 740,
        "wires": [
            [
                "d99b5b0c61d5cb46"
            ]
        ]
    },
    {
        "id": "90bc419c5c54171f",
        "type": "ui_button",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "4788da44ae885d26",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\":\"reboot\",\"value\":\"true\"}",
        "payloadType": "json",
        "topic": "node/557c87",
        "topicType": "str",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "8484bddc0d414807"
            ]
        ]
    },
    {
        "id": "05b64e46e64e0ac1",
        "type": "function",
        "z": "1adadc614d57da99",
        "name": "Format JSON",
        "func": "var reportint = msg.payload;\nvar currtime = global.get(\"g_currenttime\");\nvar sender = \"557c87\"; // msg.payload.sender\nvar assembledpayload;\nnode.status({fill:\"green\",text:reportint});\nif (reportint >= 500 && reportint < 259200000) {\n  var topic = \"node/\" + sender;\n  msg.topic = topic;\n  assembledpayload = '{\"command\":\"reportinterval\",\"value\":\"';\n  assembledpayload += reportint;\n  assembledpayload += '\",\"sender\":\"';\n  assembledpayload+= 'nodered\",\"time\":\"' + currtime + '\"}';\n  msg.payload = assembledpayload;\n  return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 620,
        "wires": [
            [
                "80143ff6b1cfde9b",
                "281ac4770d23f1d7"
            ]
        ]
    },
    {
        "id": "86d40a5236d321de",
        "type": "switch",
        "z": "1adadc614d57da99",
        "name": "Sort by topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "node/data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/azimuth",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/ponyexpress",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 250,
        "y": 380,
        "wires": [
            [],
            [
                "d69acc3a45ea52f3"
            ],
            [
                "e62b6268c1546275"
            ],
            []
        ],
        "inputLabels": [
            "all JSON"
        ],
        "outputLabels": [
            "compass",
            "azimuth",
            "packet",
            "all others"
        ]
    },
    {
        "id": "66a6f90a05add99f",
        "type": "ui_button",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "4788da44ae885d26",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Node Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\":\"reportconfig\",\"value\":\"true\"}",
        "payloadType": "json",
        "topic": "node/557c87",
        "topicType": "str",
        "x": 690,
        "y": 780,
        "wires": [
            [
                "d99b5b0c61d5cb46"
            ]
        ]
    },
    {
        "id": "82ef84eb1cfabae8",
        "type": "ui_button",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "4788da44ae885d26",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Sensor Config",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\":\"sensorconfig\",\"value\":\"true\"}",
        "payloadType": "json",
        "topic": "node/557c87",
        "topicType": "str",
        "x": 680,
        "y": 820,
        "wires": [
            [
                "d99b5b0c61d5cb46"
            ]
        ]
    },
    {
        "id": "9699c03d4419abbf",
        "type": "ui_button",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "4788da44ae885d26",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Stats",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\":\"reportdiagnostics\",\"value\":\"true\"}",
        "payloadType": "json",
        "topic": "node/557c87",
        "topicType": "str",
        "x": 710,
        "y": 860,
        "wires": [
            [
                "d99b5b0c61d5cb46"
            ]
        ]
    },
    {
        "id": "b9d1914775ff7992",
        "type": "ui_button",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "4788da44ae885d26",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset Stats",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\":\"resetdiagnostics\",\"value\":\"true\"}",
        "payloadType": "json",
        "topic": "node/557c87",
        "topicType": "str",
        "x": 690,
        "y": 900,
        "wires": [
            [
                "a2138c7abf750430"
            ]
        ]
    },
    {
        "id": "d99b5b0c61d5cb46",
        "type": "change",
        "z": "1adadc614d57da99",
        "name": "net tie",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "d264fca12369cd67"
            ]
        ]
    },
    {
        "id": "6e78c309d620edd2",
        "type": "ui_text_input",
        "z": "1adadc614d57da99",
        "name": "",
        "label": "Interval (msec)",
        "tooltip": "",
        "group": "4788da44ae885d26",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 680,
        "y": 620,
        "wires": [
            [
                "05b64e46e64e0ac1"
            ]
        ]
    },
    {
        "id": "8484bddc0d414807",
        "type": "ui_are_you_sure",
        "z": "1adadc614d57da99",
        "name": "stopprompt",
        "group": "dc3b3657261041d5",
        "iconColor": "#ffcc00",
        "textColor": "#ffffff",
        "backgroundColor": "#000000",
        "icon": "fa fa-exclamation-triangle",
        "title": "REBOOT NODE?",
        "description": "Are you sure you want to stop reboot the node?",
        "timeoutSec": "60",
        "x": 870,
        "y": 700,
        "wires": [
            [
                "d99b5b0c61d5cb46"
            ],
            []
        ]
    },
    {
        "id": "a2138c7abf750430",
        "type": "ui_are_you_sure",
        "z": "1adadc614d57da99",
        "name": "stopprompt",
        "group": "dc3b3657261041d5",
        "iconColor": "#ffcc00",
        "textColor": "#ffffff",
        "backgroundColor": "#000000",
        "icon": "fa fa-exclamation-triangle",
        "title": "RESET STATISTICS",
        "description": "Are you sure you want to reset statistics?",
        "timeoutSec": "60",
        "x": 870,
        "y": 900,
        "wires": [
            [
                "d99b5b0c61d5cb46"
            ],
            []
        ]
    },
    {
        "id": "46d2827f060ddbe9",
        "type": "change",
        "z": "1adadc614d57da99",
        "name": "Compass Cleanup",
        "rules": [
            {
                "t": "delete",
                "p": "payload.description",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.heading",
                "pt": "msg",
                "to": "payload.payload.xMC5883.heading",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.title",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.time",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.sender",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "compass",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload.heading)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 340,
        "wires": [
            [
                "1d442a7ba19f074b",
                "bfc28c8e3a5e4d86"
            ]
        ]
    },
    {
        "id": "80143ff6b1cfde9b",
        "type": "mqtt out",
        "z": "1adadc614d57da99",
        "name": "557c87",
        "topic": "node/557c87",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2fce7cb011bd49b7",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "281ac4770d23f1d7",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "reportint",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 580,
        "wires": []
    },
    {
        "id": "952c1402c3a650b8",
        "type": "function",
        "z": "1adadc614d57da99",
        "name": "sortinghat",
        "func": "//return [ null, msg ];\n// payload.title\nvar nodefunction = msg.payload.title;\nvar nodefunctext = \"\";\nvar msgarray= [];\nnodefunction = Number(nodefunction);\n//node.status({fill:\"green\",text:(nodefunction & 8)});\nif ((nodefunction & 1) ) {\n    msgarray [0] = msg.payload;\n    nodefunctext += \"packet\";\n} else {\n    msgarray [0] = null;\n}\nif ((nodefunction & 2) == 2) {\n    msgarray [1] = msg.payload;\n    nodefunctext += \"ina\";\n} else {\n    msgarray [1] = null;\n}\nif ((nodefunction & 4) ) {\n    msgarray [2] = msg.payload;\n    nodefunctext += \"neo\";\n} else {\n    msgarray [2] = null;\n}\nif ((nodefunction & 8) == 8) {\n    msgarray [3] = msg.payload;\n    nodefunctext += \"compass\";\n} else {\n    msgarray [3] = null;\n}\nnode.status({fill:\"green\",text:nodefunction+\":\"+nodefunctext});\nmsg = msgarray;\nreturn msg;\n//return [ null, null, null, msg, null, null, null, null, null ];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1340,
        "wires": [
            [
                "e0fc8596fd30eba3"
            ],
            [
                "128224524d46f1c5"
            ],
            [
                "a96c5a47a5a68d77"
            ],
            [
                "7fbf556973cc3c78"
            ],
            [
                "092ef2ce7951a19d"
            ],
            [
                "5753ca10ccb031e0"
            ],
            [
                "4c1d051259ddf93e"
            ],
            [
                "2f8428c70c5082ae"
            ],
            [
                "74868f3a6635b807"
            ]
        ],
        "outputLabels": [
            "PacketFwd",
            "INA3221",
            "NEO6_7",
            "xMC5883",
            "BMP280",
            "BMP680",
            "MPU6050",
            "ADXL345",
            "AS5600"
        ],
        "info": "#define defFuncPacketFwd false                        // defNodeFunction bit 1 (1) (LSB)\r\n#define defFuncINA3221 false                          // defNodeFunction bit 2 (2)\r\n#define defFuncNEO6_7 false                           // defNodeFunction bit 3 (4)\r\n#define defFuncHMC5883 true                           // defNodeFunction bit 4 (8)\r\n#define defFuncBMP280 false                           // defNodeFunction bit 5 (16)\r\n#define defFuncBMP680 false                           // defNodeFunction bit 6 (32)\r\n#define defFuncMPU6050 false                          // defNodeFunction bit 7 (64)\r\n#define defFuncADXL345 false                          // defNodeFunction bit 8 (128)\r\n#define defFuncAS6500 false                           // defNodeFunction bit 9 (256)"
    },
    {
        "id": "f23c0fec41b1a89a",
        "type": "inject",
        "z": "1adadc614d57da99",
        "name": "8",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"8\",\"sender\":\"557c87\",\"description\":\"data\",\"time\":\"1706544854\",\"payload\":{\"xMC5883\":{\"heading\":\"27.6\"}}}",
        "payloadType": "json",
        "x": 130,
        "y": 1380,
        "wires": [
            [
                "0e4743376517e6aa"
            ]
        ]
    },
    {
        "id": "84d994f98c16bd6a",
        "type": "inject",
        "z": "1adadc614d57da99",
        "name": "9",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"9\",\"sender\":\"557c87\",\"description\":\"data\",\"time\":\"1706544854\",\"payload\":{\"xMC5883\":{\"heading\":\"27.6\"}}}",
        "payloadType": "json",
        "x": 130,
        "y": 1420,
        "wires": [
            [
                "0e4743376517e6aa"
            ]
        ]
    },
    {
        "id": "4f5fb91dd2d3c239",
        "type": "inject",
        "z": "1adadc614d57da99",
        "name": "3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"3\",\"sender\":\"557c87\",\"description\":\"data\",\"time\":\"1706544854\",\"payload\":{\"xMC5883\":{\"heading\":\"27.6\"}}}",
        "payloadType": "json",
        "x": 130,
        "y": 1280,
        "wires": [
            [
                "0e4743376517e6aa"
            ]
        ]
    },
    {
        "id": "18f9e0c8bf99db7a",
        "type": "inject",
        "z": "1adadc614d57da99",
        "name": "5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"5\",\"sender\":\"557c87\",\"description\":\"data\",\"time\":\"1706544854\",\"payload\":{\"xMC5883\":{\"heading\":\"27.6\"}}}",
        "payloadType": "json",
        "x": 130,
        "y": 1320,
        "wires": [
            [
                "0e4743376517e6aa"
            ]
        ]
    },
    {
        "id": "7fbf556973cc3c78",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "compass",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1300,
        "wires": []
    },
    {
        "id": "74868f3a6635b807",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "as5600",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e0fc8596fd30eba3",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "packetfwd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1180,
        "wires": []
    },
    {
        "id": "128224524d46f1c5",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "ina3221",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1220,
        "wires": []
    },
    {
        "id": "092ef2ce7951a19d",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "bmp280",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1340,
        "wires": []
    },
    {
        "id": "a96c5a47a5a68d77",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "neo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1260,
        "wires": []
    },
    {
        "id": "2f8428c70c5082ae",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "adxl",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1460,
        "wires": []
    },
    {
        "id": "4c1d051259ddf93e",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "mpu",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5753ca10ccb031e0",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "bmp680",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1380,
        "wires": []
    },
    {
        "id": "74a8738b386d083f",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "payloadtitle",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.title",
        "statusType": "msg",
        "x": 530,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0e4743376517e6aa",
        "type": "function",
        "z": "1adadc614d57da99",
        "name": "join",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1340,
        "wires": [
            [
                "952c1402c3a650b8",
                "74a8738b386d083f"
            ]
        ]
    },
    {
        "id": "06b7e3f65355f2d5",
        "type": "link out",
        "z": "1adadc614d57da99",
        "name": "datafeed",
        "mode": "link",
        "links": [
            "509551df3408bd1a",
            "5c539b602b0c4198",
            "958bacad9036bf8c",
            "73330ebeb2eab215"
        ],
        "x": 1275,
        "y": 540,
        "wires": []
    },
    {
        "id": "9064f9f5fd97fa2d",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 555,
        "y": 600,
        "wires": [
            [
                "6e78c309d620edd2"
            ]
        ]
    },
    {
        "id": "40a51ade16f746f3",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 555,
        "y": 920,
        "wires": [
            [
                "b9d1914775ff7992"
            ]
        ]
    },
    {
        "id": "42f081ca34838bca",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 555,
        "y": 640,
        "wires": [
            [
                "6e78c309d620edd2"
            ]
        ]
    },
    {
        "id": "4109827b3f0ce150",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 555,
        "y": 720,
        "wires": [
            [
                "90bc419c5c54171f"
            ]
        ]
    },
    {
        "id": "2d47d40f016f1df8",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 555,
        "y": 880,
        "wires": [
            [
                "b9d1914775ff7992"
            ]
        ]
    },
    {
        "id": "b2f998c820f5777a",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 555,
        "y": 680,
        "wires": [
            [
                "90bc419c5c54171f"
            ]
        ]
    },
    {
        "id": "e62b6268c1546275",
        "type": "csv",
        "z": "1adadc614d57da99",
        "name": "Packet Parser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Loc,4300PacketNum,GroupID,UnitID,TempC,Voltage,RcvNoise,RcvRSSI,LastRSSI,LastNoise,GPS",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": true,
        "x": 460,
        "y": 420,
        "wires": [
            [
                "893ad8c15ade3895"
            ]
        ]
    },
    {
        "id": "d69acc3a45ea52f3",
        "type": "csv",
        "z": "1adadc614d57da99",
        "name": "AzimuthParser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Azimuthmillis,Azimuth,MagnetStr",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 460,
        "y": 380,
        "wires": [
            [
                "d081df75e716c246"
            ]
        ]
    },
    {
        "id": "1d442a7ba19f074b",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "compass(clean)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 320,
        "wires": []
    },
    {
        "id": "a461ef4fa8289b6e",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "azimuth(clean)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 440,
        "wires": []
    },
    {
        "id": "6169148b78512380",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "packet(clean)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 540,
        "wires": []
    },
    {
        "id": "d081df75e716c246",
        "type": "change",
        "z": "1adadc614d57da99",
        "name": "Azimuth Cleanup",
        "rules": [
            {
                "t": "delete",
                "p": "payload.Azimuthmillis",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.MagnetStr",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "palletspinner",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Azimuth",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 420,
        "wires": [
            [
                "a461ef4fa8289b6e",
                "bfc28c8e3a5e4d86",
                "6663cf206b151900"
            ]
        ]
    },
    {
        "id": "893ad8c15ade3895",
        "type": "change",
        "z": "1adadc614d57da99",
        "name": "Packet Cleanup",
        "rules": [
            {
                "t": "delete",
                "p": "payload.Voltage",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.Loc",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.TempC",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.LastRSSI",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.LastNoise",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.GPS",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "packet",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "parts",
                "pt": "msg",
                "to": "complete",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(payload.RcvRSSI)-$number(payload.RcvNoise)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 520,
        "wires": [
            [
                "6169148b78512380",
                "bfc28c8e3a5e4d86",
                "26983f1ba4dd8b53"
            ]
        ]
    },
    {
        "id": "bfc28c8e3a5e4d86",
        "type": "join",
        "z": "1adadc614d57da99",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 400,
        "wires": [
            [
                "0a9a23a21527f47e",
                "06b7e3f65355f2d5",
                "a73246475bb17d9d"
            ]
        ]
    },
    {
        "id": "0a9a23a21527f47e",
        "type": "debug",
        "z": "1adadc614d57da99",
        "name": "join",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 320,
        "wires": []
    },
    {
        "id": "6663cf206b151900",
        "type": "ui_gauge",
        "z": "1adadc614d57da99",
        "name": "palletspinner",
        "group": "3fc1c323cecc5e37",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "compass",
        "title": "Pallet Spinner",
        "label": "degrees",
        "format": "{{payload}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "26983f1ba4dd8b53",
        "type": "ui_chart",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "d560ad2316caa4f9",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "SNR",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a73246475bb17d9d",
        "type": "function",
        "z": "1adadc614d57da99",
        "name": "",
        "func": "var snrarray = flow.get(\"snrarray\") || [];\nvar roundazto = 10;\nvar azarray = [0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350];\nvar currazsector = msg.payload.palletspinner;\ncurrazsector = Math.floor(currazsector/roundazto); // 359 -> 35.9 -> 35 .. 1 -> 0.1 -> 0 .. 9.9 -> 0.99 -> 0 .. 10.1 -> 1.01 -> 1\n// currazsector will correlate directly to the index of snrarray\nvar lastazsector = flow.get(\"lastazsector\");\nvar azsectorsamplecount = flow.get(\"azsectorsamplecount\") || 0;\nif (lastazsector == currazsector) {\n    //now average with existing snrarray value, weighted\n    node.status({fill:\"green\",text:snrarray[currazsector]});\n    var temp = msg.payload.packet + snrarray[currazsector] * azsectorsamplecount;\n    azsectorsamplecount++;\n    temp = Math.round(temp/azsectorsamplecount);\n    snrarray[currazsector] = temp;\n} else {\n    // we entered a new sector\n    azsectorsamplecount = 0;\n    snrarray[currazsector]=msg.payload.packet;\n}\nflow.set(\"azsectorsamplecount\",azsectorsamplecount);\nflow.set(\"lastazsector\",currazsector);\nflow.set(\"snrarray\",snrarray);\n\n// now, set up the message so the radar plot will display properly\nvar m = {};\nm.labels = azarray;\nm.data = [snrarray];\nm.series = ['Most Recent'];\nreturn {payload:[m],topic:msg.topic};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 400,
        "wires": [
            [
                "a68d32356d4352df"
            ]
        ]
    },
    {
        "id": "a68d32356d4352df",
        "type": "ui_chart",
        "z": "1adadc614d57da99",
        "name": "",
        "group": "ae6e4ee5ad35f1fc",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "MyRadar",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "MyRadar",
        "dot": false,
        "ymin": "-100",
        "ymax": "-70",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "30",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1460,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "352bec218510accb",
        "type": "link in",
        "z": "1adadc614d57da99",
        "name": "JSON_Compass_Raw",
        "links": [
            "5a56c85432f3f128",
            "6f88fed0285c9343"
        ],
        "x": 565,
        "y": 120,
        "wires": [
            [
                "0c5563b603dfae5d",
                "46d2827f060ddbe9"
            ]
        ]
    },
    {
        "id": "509551df3408bd1a",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "Recording",
        "links": [
            "06b7e3f65355f2d5"
        ],
        "x": 625,
        "y": 560,
        "wires": [
            [
                "8e20f4a9068a8681",
                "834db2d25933ea26"
            ]
        ]
    },
    {
        "id": "8e20f4a9068a8681",
        "type": "q-gate",
        "z": "f0b4407fe9f47f93",
        "name": "data gate",
        "controlTopic": "datacontrol",
        "defaultState": "closed",
        "openCmd": "START",
        "closeCmd": "STOP",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "1",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "memory",
        "x": 780,
        "y": 560,
        "wires": [
            [
                "48ea1642b2544e5e"
            ]
        ]
    },
    {
        "id": "8b9b103f98654155",
        "type": "csv",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 1110,
        "y": 560,
        "wires": [
            [
                "9888d456a1ae84a4",
                "bcfdf2b8ea0242f3"
            ]
        ]
    },
    {
        "id": "87a5d7b15e84ecc6",
        "type": "function",
        "z": "f0b4407fe9f47f93",
        "name": "Process Filename",
        "func": "var rcvdmsgtype = msg.topic;\nvar fileprefix;\nnode.status({fill:\"green\",text:rcvdmsgtype});\nif (rcvdmsgtype == \"shortdesc\") {\n    fileprefix = msg.payload;\n    flow.set(\"fileprefix\", fileprefix);\n}\nif (rcvdmsgtype == \"longdesc\") {\n    flow.set(\"testdescription\",msg.payload);\n}\nif (rcvdmsgtype == \"lograw\") {\n    flow.set(\"lograw\",msg.payload);\n}\nif (rcvdmsgtype == \"logdiag\") {\n    flow.set(\"logdiag\",msg.payload);\n}\nif (rcvdmsgtype == \"apply\") {\n    fileprefix = flow.get(\"fileprefix\") || \"unspecified\";\n    var testdesc = flow.get(\"testdescription\") || \"No entry from user\";\n    var currtime = global.get(\"filenameDTG\");\n    var filename = fileprefix + \"_\" + currtime;\n    var lograw = flow.get(\"lograw\") || false;\n    var logdiag = flow.get(\"logdiag\") || false;\n    msg.payload = {};\n    msg.payload.lograw = lograw;\n    if (lograw) {\n        msg.payload.lograwfilename = filename + \"_raw.txt\";\n        flow.set(\"lograwfilename\",msg.payload.lograwfilename);\n    } else {\n        flow.set(\"lograwfilename\",\"none\");\n    }\n    msg.payload.logdiag = logdiag;\n    if (logdiag) {\n        msg.payload.logdiagfilename = filename + \"_diag.txt\";\n        flow.set(\"logdiagfilename\",msg.payload.logdiagfilename);\n    } else {\n        flow.set(\"logdiagfilename\",\"none\");\n    }\n    msg.payload.starttime = currtime;\n    msg.payload.testdesc = testdesc;\n    msg.payload.datafilename = filename + \".csv\";\n    msg.payload.configfilename = filename + \"_config.txt\";\n    flow.set(\"datafilename\",msg.payload.datafilename);\n    flow.set(\"configfilename\",msg.payload.configfilename);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 260,
        "wires": [
            [
                "4997aab514b2874d",
                "5caa285e10afb8f4",
                "5fc88cefa9b5b2b9"
            ]
        ]
    },
    {
        "id": "79740ba48dd06672",
        "type": "ui_text_input",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "label": "Short Desc",
        "tooltip": "Prefix to filename. Keep it filename friendly.",
        "group": "b7a68ba52d89cce6",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "shortdesc",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "b10f7a819945123c"
            ]
        ]
    },
    {
        "id": "4997aab514b2874d",
        "type": "ui_text",
        "z": "f0b4407fe9f47f93",
        "group": "b7a68ba52d89cce6",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Filename",
        "format": "{{payload.datafilename}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "c602c20bfbb2a615",
        "type": "ui_text_input",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "label": "Long Desc",
        "tooltip": "[optional] Full description included in the config file. KEEP IT UNCLASS!",
        "group": "b7a68ba52d89cce6",
        "order": 4,
        "width": 6,
        "height": 3,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "longdesc",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "8aa212d857bbb22e"
            ]
        ]
    },
    {
        "id": "2244b160ccf0839d",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 285,
        "y": 100,
        "wires": [
            [
                "79740ba48dd06672"
            ]
        ]
    },
    {
        "id": "f34421ef94daf75e",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 285,
        "y": 140,
        "wires": [
            [
                "79740ba48dd06672"
            ]
        ]
    },
    {
        "id": "db8ba2b5aa4029e9",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 285,
        "y": 180,
        "wires": [
            [
                "c602c20bfbb2a615"
            ]
        ]
    },
    {
        "id": "42ca4707d4a229cd",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 285,
        "y": 220,
        "wires": [
            [
                "c602c20bfbb2a615"
            ]
        ]
    },
    {
        "id": "b10f7a819945123c",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "shortdesc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "87a5d7b15e84ecc6"
            ]
        ]
    },
    {
        "id": "8aa212d857bbb22e",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "longdesc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 200,
        "wires": [
            [
                "87a5d7b15e84ecc6"
            ]
        ]
    },
    {
        "id": "a9d67b185e88d68b",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "apply",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 440,
        "wires": [
            [
                "87a5d7b15e84ecc6"
            ]
        ]
    },
    {
        "id": "5f2b7a25ebc11d82",
        "type": "ui_switch",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "label": "Record Raw Data",
        "tooltip": "",
        "group": "b7a68ba52d89cce6",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 280,
        "wires": [
            [
                "568eca9c36359446"
            ]
        ]
    },
    {
        "id": "568eca9c36359446",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "lograw",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "87a5d7b15e84ecc6"
            ]
        ]
    },
    {
        "id": "5deaa707621ddadb",
        "type": "ui_switch",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "label": "Record Diagnostics",
        "tooltip": "",
        "group": "b7a68ba52d89cce6",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "d27fe048d9b8418a"
            ]
        ]
    },
    {
        "id": "d27fe048d9b8418a",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "logdiag",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "87a5d7b15e84ecc6"
            ]
        ]
    },
    {
        "id": "16a6fa0b2450d604",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 205,
        "y": 260,
        "wires": [
            [
                "5f2b7a25ebc11d82"
            ]
        ]
    },
    {
        "id": "bc23dca587d2ead3",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 205,
        "y": 300,
        "wires": [
            [
                "5f2b7a25ebc11d82"
            ]
        ]
    },
    {
        "id": "0933d58f68f00f95",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "startdisable",
        "links": [
            "ddf6d3136f083bd6"
        ],
        "x": 205,
        "y": 340,
        "wires": [
            [
                "5deaa707621ddadb"
            ]
        ]
    },
    {
        "id": "9256d2ce39e8b2df",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "stopenable",
        "links": [
            "99e055f8f7359f07"
        ],
        "x": 205,
        "y": 380,
        "wires": [
            [
                "5deaa707621ddadb"
            ]
        ]
    },
    {
        "id": "82b60100d318e9c9",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "Recording",
        "links": [
            "f60ecc23e744d99b"
        ],
        "x": 205,
        "y": 440,
        "wires": [
            [
                "2965a48f906987af"
            ]
        ]
    },
    {
        "id": "5caa285e10afb8f4",
        "type": "debug",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "2965a48f906987af",
        "type": "switch",
        "z": "f0b4407fe9f47f93",
        "name": "START/STOP",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STOP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 440,
        "wires": [
            [
                "a9d67b185e88d68b"
            ],
            [
                "988945641eafdbef"
            ]
        ],
        "outputLabels": [
            "start",
            "stop"
        ]
    },
    {
        "id": "5fc88cefa9b5b2b9",
        "type": "link out",
        "z": "f0b4407fe9f47f93",
        "name": "filenameout",
        "mode": "link",
        "links": [
            "2eccfcc7d36f3422",
            "6e6819c230f9f31c"
        ],
        "x": 1095,
        "y": 320,
        "wires": []
    },
    {
        "id": "2eccfcc7d36f3422",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "links": [
            "5fc88cefa9b5b2b9"
        ],
        "x": 1005,
        "y": 420,
        "wires": [
            [
                "4ea05ca48d2f34a0"
            ]
        ]
    },
    {
        "id": "4ea05ca48d2f34a0",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "configfile",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload.configfilename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "7c48d063e69a4f7d"
            ]
        ]
    },
    {
        "id": "7c48d063e69a4f7d",
        "type": "file",
        "z": "f0b4407fe9f47f93",
        "name": "configfile",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1300,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f31a598d.9fd2c8",
        "type": "function",
        "z": "f0b4407fe9f47f93",
        "name": "Set base path",
        "func": "//restrict to c:\\temp\\\nvar basePath = \"/home/nodered/\";\nvar filename = msg.req.params.fn;\n\n\nif(filename.includes(\"..\\\\\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} else if(filename.includes(\"../\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} \n//TODO: add more checks\n\nmsg.filename = basePath + filename;\nreturn [msg, null];//fire output 1\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 760,
        "wires": [
            [
                "34dc99e5.495466"
            ],
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "98261154.3006",
        "type": "http response",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 800,
        "wires": []
    },
    {
        "id": "34dc99e5.495466",
        "type": "file in",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 850,
        "y": 740,
        "wires": [
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "38d65d59.1d8aa2",
        "type": "catch",
        "z": "f0b4407fe9f47f93",
        "d": true,
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 480,
        "y": 840,
        "wires": [
            [
                "3b8014a.86ad8ec",
                "5b18a8e7.fb8da8"
            ]
        ]
    },
    {
        "id": "3b8014a.86ad8ec",
        "type": "function",
        "z": "f0b4407fe9f47f93",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 840,
        "wires": [
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "5b18a8e7.fb8da8",
        "type": "debug",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 510,
        "y": 880,
        "wires": []
    },
    {
        "id": "5de7cbb4.fa21a4",
        "type": "comment",
        "z": "f0b4407fe9f47f93",
        "name": "Create http endpoint <nodered>/files/xxx  where xxx is the file name to download",
        "info": "",
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "67ecfa7f.3f0e24",
        "type": "http in",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "url": "/ui/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "f31a598d.9fd2c8"
            ]
        ]
    },
    {
        "id": "9888d456a1ae84a4",
        "type": "file",
        "z": "f0b4407fe9f47f93",
        "name": "processeddata",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1280,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "48ea1642b2544e5e",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "processeddata",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "procfilename",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "columns",
                "pt": "msg",
                "to": "palletspinner,compass,packet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 560,
        "wires": [
            [
                "8b9b103f98654155"
            ]
        ]
    },
    {
        "id": "6e6819c230f9f31c",
        "type": "link in",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "links": [
            "5fc88cefa9b5b2b9"
        ],
        "x": 425,
        "y": 620,
        "wires": [
            [
                "fc45f1115e5d096a"
            ]
        ]
    },
    {
        "id": "fc45f1115e5d096a",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "startdatafile",
        "rules": [
            {
                "t": "set",
                "p": "procfilename",
                "pt": "flow",
                "to": "payload.datafilename",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "datacontrol",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "START",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 620,
        "wires": [
            [
                "8e20f4a9068a8681"
            ]
        ]
    },
    {
        "id": "7326a4b8a8473e05",
        "type": "debug",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "988945641eafdbef",
        "type": "change",
        "z": "f0b4407fe9f47f93",
        "name": "stopdatafile",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "datacontrol",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "STOP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 500,
        "wires": [
            [
                "8e20f4a9068a8681",
                "cc3e9d8b6c1810fd"
            ]
        ]
    },
    {
        "id": "cc3e9d8b6c1810fd",
        "type": "function",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "func": "var config = flow.get(\"configfilename\");\nvar data = flow.get(\"datafilename\");\nvar diag = flow.get(\"logdiagfilename\");\nvar raw = flow.get(\"lograwfilename\");\nvar assembledtemplate = '<div>\\n'\nassembledtemplate += '<a href=\"' + config + '\">config</a>\\n';\nassembledtemplate += '<a href=\"' + data + '\">data</a>\\n';\nif (diag != \"none\") {\n    assembledtemplate += '<a href=\"' + diag + '\">diag</a>\\n';\n}\nif (raw != \"none\") {\n    assembledtemplate += '<a href=\"' + raw + '\">raw</a>\\n';\n}\nassembledtemplate += '</div>';\nmsg.payload = assembledtemplate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 500,
        "wires": [
            [
                "7326a4b8a8473e05",
                "ae2158719ef46735"
            ]
        ]
    },
    {
        "id": "ae2158719ef46735",
        "type": "ui_template",
        "z": "f0b4407fe9f47f93",
        "group": "b7a68ba52d89cce6",
        "name": "present download links",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "834db2d25933ea26",
        "type": "debug",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 620,
        "wires": []
    },
    {
        "id": "bcfdf2b8ea0242f3",
        "type": "debug",
        "z": "f0b4407fe9f47f93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 680,
        "wires": []
    },
    {
        "id": "18403f4e8cb4b2c8",
        "type": "udp in",
        "z": "4d79f821c7bfa7e5",
        "name": "listener",
        "iface": "",
        "port": "8266",
        "multicast": "true",
        "group": "224.0.1.3",
        "datatype": "buffer",
        "x": 70,
        "y": 240,
        "wires": [
            [
                "dfcb5da6e769cdb4",
                "3f2d4ec657bae659"
            ]
        ]
    },
    {
        "id": "32d0f335adda4efc",
        "type": "debug",
        "z": "4d79f821c7bfa7e5",
        "name": "SENT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ip",
        "statusType": "msg",
        "x": 1230,
        "y": 260,
        "wires": []
    },
    {
        "id": "dfcb5da6e769cdb4",
        "type": "switch",
        "z": "4d79f821c7bfa7e5",
        "name": "if mqtt query",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "mqtt-query",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 240,
        "wires": [
            [
                "d180789459a56f61"
            ]
        ]
    },
    {
        "id": "49456b1c72f12e8c",
        "type": "inject",
        "z": "4d79f821c7bfa7e5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "ip",
                "v": "127.0.0.1",
                "vt": "str"
            },
            {
                "p": "port",
                "v": "8266",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "mqtt-query",
        "payloadType": "str",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "57eb0004392a0656"
            ]
        ]
    },
    {
        "id": "57eb0004392a0656",
        "type": "udp out",
        "z": "4d79f821c7bfa7e5",
        "name": "send",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "8266",
        "base64": false,
        "multicast": "false",
        "x": 490,
        "y": 500,
        "wires": []
    },
    {
        "id": "9a2521744461c327",
        "type": "udp out",
        "z": "4d79f821c7bfa7e5",
        "name": "send",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "8266",
        "base64": false,
        "multicast": "false",
        "x": 1230,
        "y": 220,
        "wires": []
    },
    {
        "id": "3f2d4ec657bae659",
        "type": "debug",
        "z": "4d79f821c7bfa7e5",
        "name": "RCVD",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "ip",
        "statusType": "msg",
        "x": 210,
        "y": 280,
        "wires": []
    },
    {
        "id": "5843a5c53a46ab5c",
        "type": "inject",
        "z": "4d79f821c7bfa7e5",
        "name": "manual response",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "ip",
                "v": "192.168.1.8",
                "vt": "str"
            },
            {
                "p": "port",
                "v": "8266",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "192.168.1.6",
        "payloadType": "str",
        "x": 320,
        "y": 520,
        "wires": [
            [
                "57eb0004392a0656"
            ]
        ]
    },
    {
        "id": "5366eda80351522d",
        "type": "comment",
        "z": "4d79f821c7bfa7e5",
        "name": "For troubleshooting UDP query and responses",
        "info": "",
        "x": 350,
        "y": 420,
        "wires": []
    },
    {
        "id": "681bd37a0617be63",
        "type": "comment",
        "z": "4d79f821c7bfa7e5",
        "name": "UDP auto discovery",
        "info": "Listens for packets on set UDP IP 224.0.1.3 at port 8266\nIf payload is \"mqtt-query\", then we:\n  set the interface name we'll query (wlan0)\n  use the interface name to format command line\n  issue command to CLI\n  parse response\n  set payload to my IP\n  purge unnecessary stuff for cleanliness\n  send it",
        "x": 130,
        "y": 180,
        "wires": []
    },
    {
        "id": "34c07e4db87d2cae",
        "type": "template",
        "z": "4d79f821c7bfa7e5",
        "name": "Set commands",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ifconfig {{localinterface}} | grep '\\<inet\\>' | sed -n '1p' | tr -s ' ' | cut -d ' ' -f3 | cut -d ':' -f2;\nifconfig {{localinterface}} | grep '\\<inet\\>' | sed -n '1p' | tr -s ' ' | cut -d ' ' -f5;\nifconfig {{localinterface}} | grep 'ether' | tr -s ' ' | cut -d ' ' -f3",
        "output": "str",
        "x": 560,
        "y": 240,
        "wires": [
            [
                "fb4138247c067e13"
            ]
        ]
    },
    {
        "id": "fb4138247c067e13",
        "type": "exec",
        "z": "4d79f821c7bfa7e5",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Get IP",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "200e4a636e3b6808"
            ],
            [],
            []
        ]
    },
    {
        "id": "200e4a636e3b6808",
        "type": "csv",
        "z": "4d79f821c7bfa7e5",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 830,
        "y": 220,
        "wires": [
            [
                "d04f9e78d1ef4d3c"
            ]
        ]
    },
    {
        "id": "d04f9e78d1ef4d3c",
        "type": "change",
        "z": "4d79f821c7bfa7e5",
        "name": "Set payload and cleanup",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].col1",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "rc",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "localinterface",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "columns",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "9a2521744461c327",
                "32d0f335adda4efc"
            ]
        ]
    },
    {
        "id": "d180789459a56f61",
        "type": "change",
        "z": "4d79f821c7bfa7e5",
        "name": "set interface",
        "rules": [
            {
                "t": "set",
                "p": "localinterface",
                "pt": "msg",
                "to": "wlan0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "34c07e4db87d2cae"
            ]
        ]
    },
    {
        "id": "0ce5095a0280410a",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "Packet V2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "H,2FSK,4ED836B2,1F7173A8,RESP,3557,12,7,34.1,3.255,-22,-89,2017,4,24,17,29,23,38.3304,-77.02568",
        "payloadType": "str",
        "x": 240,
        "y": 680,
        "wires": [
            [
                "9a5acf9ea119d901"
            ]
        ]
    },
    {
        "id": "7211b171770f60d8",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "Azimuth",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"millis\":1,\"azimuth\":1,\"turnrate\":1}",
        "payloadType": "json",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "3577fb0aeaa7e1a9"
            ]
        ],
        "info": "Data Payload: CSV\r\nmillis = unsigned long integer\r\nazimuth = nnn.n float\r\ndegrees per sec = nn.n float"
    },
    {
        "id": "5d1bb0e904f80dfb",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "AzimuthDiagostic",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "MAGNET too weak,ff,00,00",
        "payloadType": "str",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "cb6d2a52c96ff667"
            ]
        ],
        "info": "Diagnostic Payload: CSV\r\nmagnet status (string) OR magnet strength (integer)\r\nagc level ff\r\ncurrent hysteresis level 00\r\ncurrent offset value 00\r\n\r\nSample MAC 30AEA4070D64"
    },
    {
        "id": "9cf7b2a1ef1e877b",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "Trigger Az Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "dd7a0afcb245446c"
            ]
        ]
    },
    {
        "id": "3577fb0aeaa7e1a9",
        "type": "function",
        "z": "555b7e6ec5d6387b",
        "name": "Increment Azimuth Counters",
        "func": "var azimuthenabled = flow.get('azimuthenabled');\nif (typeof azimuthenabled == \"undefined\")\n    azimuthenabled = 0;  // default to off\nif (azimuthenabled == 1) {\n    var azimuthmillis = flow.get('azimuthmillis');\n    if (typeof azimuthmillis == \"undefined\")\n        azimuthmillis = 0;\n    var azimuthvalue = flow.get('azimuthvalue');\n    if (typeof azimuthvalue == \"undefined\")\n        azimuthvalue = 0;\n    var turnratevalue = flow.get('turnratevalue');\n    if (typeof turnratevalue == \"undefined\")\n        turnratevalue = 3;\n    azimuthmillis += 100;\n    azimuthvalue += 0.5;\n    if (azimuthvalue > 360)\n      azimuthvalue = azimuthvalue-360;\n    msg.payload.millis = azimuthmillis;\n    flow.set('azimuthmillis', azimuthmillis);\n    msg.payload.azimuth = azimuthvalue;\n    flow.set('azimuthvalue', azimuthvalue);\n    msg.payload.turnrate = turnratevalue;\n} else {\n    msg.payload = \"azimuth system disabled\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 160,
        "wires": [
            [
                "9eebac9e3aacd5ca"
            ]
        ]
    },
    {
        "id": "dd7a0afcb245446c",
        "type": "function",
        "z": "555b7e6ec5d6387b",
        "name": "Reset Azimuth Counters",
        "func": "flow.set('azimuthmillis',0);\nflow.set('azimuthvalue', 0);\nflow.set('turnratevalue', 3);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "9eebac9e3aacd5ca"
            ]
        ]
    },
    {
        "id": "2ab570e5d3fbc545",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Azimuth Values",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 120,
        "wires": []
    },
    {
        "id": "1d1d8960def21791",
        "type": "function",
        "z": "555b7e6ec5d6387b",
        "name": "Toggle Azimuth System",
        "func": "var azimuthenabled = flow.get('azimuthenabled');\nif (typeof azimuthenabled == \"undefined\")\n    azimuthenabled = 1;\nif (azimuthenabled == 1) {\n    //  block of code to be executed if the condition is true\n    azimuthenabled = 0;\n} else {\n    //  block of code to be executed if the condition is false\n    azimuthenabled = 1;\n}\nflow.set('azimuthenabled', azimuthenabled);\nmsg.payload = azimuthenabled;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "d08d6b5a13cf53fd"
            ]
        ]
    },
    {
        "id": "0985ae0f66cf1efe",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "Toggle Azimuth System",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 200,
        "y": 40,
        "wires": [
            [
                "1d1d8960def21791"
            ]
        ]
    },
    {
        "id": "d08d6b5a13cf53fd",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Azimuth Enabled?",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "4e7d3a4fbd5712ea",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Azimuth Diagnostics Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 220,
        "wires": []
    },
    {
        "id": "cb6d2a52c96ff667",
        "type": "function",
        "z": "555b7e6ec5d6387b",
        "name": "Broadcast Azimuth Diagnostics",
        "func": "var azimuthenabled = flow.get('azimuthenabled');\nif (typeof azimuthenabled == \"undefined\")\n    azimuthenabled = 0;  // default to off\nif (azimuthenabled == 1) {\n    // do stuff\n    msg.payload = \"MAGNET too weak,ff,00,00\";\n} else {\n    msg.payload = \"azimuth system disabled\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "bc3c3e3a05e4f919"
            ]
        ]
    },
    {
        "id": "bc3c3e3a05e4f919",
        "type": "switch",
        "z": "555b7e6ec5d6387b",
        "name": "ENABLED?",
        "property": "azimuthenabled",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "4e7d3a4fbd5712ea"
            ],
            []
        ],
        "outputLabels": [
            "ENABLED",
            "DISABLED"
        ]
    },
    {
        "id": "9eebac9e3aacd5ca",
        "type": "switch",
        "z": "555b7e6ec5d6387b",
        "name": "ENABLED?",
        "property": "azimuthenabled",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "2ab570e5d3fbc545",
                "63a5346d1d76bbe8"
            ],
            []
        ],
        "outputLabels": [
            "ENABLED",
            "DISABLED"
        ]
    },
    {
        "id": "b73b19af3616f58c",
        "type": "function",
        "z": "555b7e6ec5d6387b",
        "name": "Toggle Beacon",
        "func": "var beacon1enabled = flow.get('beacon1enabled');\nif (typeof beacon1enabled == \"undefined\")\n    beacon1enabled = 1;\nif (beacon1enabled == 1) {\n    //  block of code to be executed if the condition is true\n    beacon1enabled = 0;\n} else {\n    //  block of code to be executed if the condition is false\n    beacon1enabled = 1;\n    var beacon1packet = flow.get('beacon1packet') || 0;\n    flow.set(\"beacon1packet\", 0);\n}\nflow.set('beacon1enabled', beacon1enabled);\nmsg.payload = beacon1enabled;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 320,
        "wires": [
            [
                "4aed472e26e29cad"
            ]
        ]
    },
    {
        "id": "01853f70a4613f8f",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "Toggle Beacon",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "b73b19af3616f58c"
            ]
        ]
    },
    {
        "id": "4aed472e26e29cad",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Beacon Enabled?",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "4d768c4aebc8eb44",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "Packet V1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Loc\":\"H\",\"PacketNum\":73,\"GroupID\":8,\"UnitID\":4,\"TempC\":28.6,\"Voltage\":3.312,\"RcvNoise\":-191,\"RcvRSSI\":-42,\"LastRSSI\":-29,\"LastNoise\":-129,\"GPS\":0}",
        "payloadType": "json",
        "x": 210,
        "y": 480,
        "wires": [
            [
                "8a47fe263e42b087"
            ]
        ]
    },
    {
        "id": "8a47fe263e42b087",
        "type": "function",
        "z": "555b7e6ec5d6387b",
        "name": "Update Beacon 1",
        "func": "var beacon1enabled = flow.get('beacon1enabled') || 0;\nif (beacon1enabled == 1) {\n    // Loc,PacketNum,GroupID,UnitID,TempC,Voltage,\n    // RcvNoise,RcvRSSI,LastRSSI,LastNoise,GPS\n    var beacon1packet = flow.get('beacon1packet') || 0;\n    var temperaturevalue = flow.get('temperaturevalue') || 0;\n    var voltagevalue = flow.get('voltagevalue') || 0;\n    var rcvnoisevalue = flow.get('rcvnoisevalue') || 0;\n    var rcvrssievalue = flow.get('rcvrssievalue') || 0;\n    var lastnoisevalue = flow.get('lastnoisevalue') || 0;\n    var lastrssivalue = flow.get('lastrssivalue') || 0;\n    beacon1packet += 1;\n    temperaturevalue = 20 + (Math.round(Math.random() * 30)) / 10;\n    voltagevalue = 3 + (Math.round(Math.random() * 1000)) / 1000;\n    rcvnoisevalue = -27 - (Math.round(Math.random() * 9));\n    rcvrssievalue = -107 - (Math.round(Math.random() * 16));\n    lastnoisevalue = -30 - (Math.round(Math.random() * 7));\n    lastrssivalue = -118 - (Math.round(Math.random() * 12));\n    msg.payload.Loc = \"H\";\n    msg.payload.PacketNum = beacon1packet;\n    flow.set(\"beacon1packet\", beacon1packet);\n    msg.payload.GroupID = 8;\n    msg.payload.UnitID = 4;\n    msg.payload.TempC = temperaturevalue;\n    flow.set(\"temperaturevalue\", temperaturevalue);\n    msg.payload.Voltage = voltagevalue;\n    flow.set(\"voltagevalue\", voltagevalue);\n    msg.payload.RcvNoise = rcvnoisevalue;\n    flow.set(\"rcvnoisevalue\", rcvnoisevalue);\n    msg.payload.RcvRSSI = rcvrssievalue;\n    flow.set(\"rcvrssievalue\", rcvrssievalue);\n    msg.payload.LastNoise = lastnoisevalue;\n    flow.set(\"lastnoisevalue\", lastnoisevalue);\n    msg.payload.LastRSSI = lastrssivalue;\n    flow.set(\"lastrssivalue\", lastrssivalue);\n    msg.payload.GPS = 0;\n} else {\n    msg.payload = \"beacon 1 system disabled\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 480,
        "wires": [
            [
                "3d63aa3301001a6c"
            ]
        ]
    },
    {
        "id": "3d63aa3301001a6c",
        "type": "switch",
        "z": "555b7e6ec5d6387b",
        "name": "ENABLED?",
        "property": "beacon1enabled",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 480,
        "wires": [
            [
                "8d7fce91bf3c97a4",
                "4e02d4c05ddf29c6"
            ],
            []
        ],
        "outputLabels": [
            "ENABLED",
            "DISABLED"
        ]
    },
    {
        "id": "4e02d4c05ddf29c6",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Packet V1 Randomized in JSON",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 520,
        "wires": []
    },
    {
        "id": "e0b2deaa7c771218",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "PacketV2 Plain Ouput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 660,
        "wires": []
    },
    {
        "id": "9a5acf9ea119d901",
        "type": "csv",
        "z": "555b7e6ec5d6387b",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Loc,PacketNum,GroupID,UnitID,TempC,Voltage,RcvNoise,RcvRSSI,LastRSSI,LastNoise,GPS",
        "skip": "0",
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "b93481bea61e1856"
            ]
        ]
    },
    {
        "id": "72d35fc4b13559af",
        "type": "mqtt out",
        "z": "555b7e6ec5d6387b",
        "name": "PacketV1 MQTT",
        "topic": "node/ponyexpress",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2fce7cb011bd49b7",
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "3e3d151a41a2941b",
        "type": "mqtt out",
        "z": "555b7e6ec5d6387b",
        "name": "PacketV2 MQTT",
        "topic": "node/ponyexpress",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9ad53e0e62e39b88",
        "x": 1120,
        "y": 700,
        "wires": []
    },
    {
        "id": "1aed09a0d505ec97",
        "type": "mqtt out",
        "z": "555b7e6ec5d6387b",
        "name": "Azimuth MQTT",
        "topic": "node/azimuth",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2fce7cb011bd49b7",
        "x": 1020,
        "y": 160,
        "wires": []
    },
    {
        "id": "8d7fce91bf3c97a4",
        "type": "csv",
        "z": "555b7e6ec5d6387b",
        "name": "JSONtoCSV",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Loc,PacketNum,GroupID,UnitID,TempC,Voltage,RcvNoise,RcvRSSI,LastRSSI,LastNoise,GPS",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 850,
        "y": 440,
        "wires": [
            [
                "8127c1796d839c5b"
            ]
        ]
    },
    {
        "id": "63a5346d1d76bbe8",
        "type": "csv",
        "z": "555b7e6ec5d6387b",
        "name": "JSONtoCSV",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "millis,azimuth,turnrate",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 830,
        "y": 160,
        "wires": [
            [
                "1aed09a0d505ec97",
                "fc3c10f9c61981b2"
            ]
        ]
    },
    {
        "id": "2a8b823318ce95a5",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Packet V1 MQTT Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 420,
        "wires": []
    },
    {
        "id": "e40bf808286e602e",
        "type": "comment",
        "z": "555b7e6ec5d6387b",
        "name": "KNOWN BUG",
        "info": "Known bug in the randomized voltage.\n\nSometimes causes outputs with over \n10 decimal places of output VS x.xxx\n\nSeems to be something with Javascript's \nhandling of the Math.Round function. \n\nDOES NOT have the same problem with the \nother randomized values. So...wtf?",
        "x": 630,
        "y": 420,
        "wires": []
    },
    {
        "id": "b93481bea61e1856",
        "type": "switch",
        "z": "555b7e6ec5d6387b",
        "name": "ENABLED?",
        "property": "beacon1enabled",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 680,
        "wires": [
            [
                "b6ff5e032a3b0c7d"
            ],
            []
        ],
        "outputLabels": [
            "ENABLED",
            "DISABLED"
        ]
    },
    {
        "id": "8127c1796d839c5b",
        "type": "q-gate",
        "z": "555b7e6ec5d6387b",
        "name": "data gate",
        "controlTopic": "packetcontrol",
        "defaultState": "closed",
        "openCmd": "START",
        "closeCmd": "STOP",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "1",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "memory",
        "x": 1020,
        "y": 440,
        "wires": [
            [
                "2a8b823318ce95a5",
                "72d35fc4b13559af"
            ]
        ]
    },
    {
        "id": "d185838310148daf",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "packetcontrol",
        "payload": "START",
        "payloadType": "str",
        "x": 870,
        "y": 400,
        "wires": [
            [
                "8127c1796d839c5b"
            ]
        ]
    },
    {
        "id": "ac02588be78244f1",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "packetcontrol",
        "payload": "STOP",
        "payloadType": "str",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "8127c1796d839c5b"
            ]
        ]
    },
    {
        "id": "b6ff5e032a3b0c7d",
        "type": "q-gate",
        "z": "555b7e6ec5d6387b",
        "name": "data gate",
        "controlTopic": "packetcontrol",
        "defaultState": "closed",
        "openCmd": "START",
        "closeCmd": "STOP",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "1",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "memory",
        "x": 920,
        "y": 680,
        "wires": [
            [
                "3e3d151a41a2941b",
                "e0b2deaa7c771218"
            ]
        ]
    },
    {
        "id": "d1b7d290e0bd2591",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "packetcontrol",
        "payload": "STOP",
        "payloadType": "str",
        "x": 770,
        "y": 720,
        "wires": [
            [
                "b6ff5e032a3b0c7d"
            ]
        ]
    },
    {
        "id": "602e69d37a12fa29",
        "type": "inject",
        "z": "555b7e6ec5d6387b",
        "name": "start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "packetcontrol",
        "payload": "START",
        "payloadType": "str",
        "x": 770,
        "y": 640,
        "wires": [
            [
                "b6ff5e032a3b0c7d"
            ]
        ]
    },
    {
        "id": "fc3c10f9c61981b2",
        "type": "debug",
        "z": "555b7e6ec5d6387b",
        "name": "Azimuth String",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "1627c684d108dc45",
        "type": "inject",
        "z": "ef09b2ee949083c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "b754b2d0054328b3"
            ]
        ]
    },
    {
        "id": "bf71f6ef79db01cb",
        "type": "inject",
        "z": "ef09b2ee949083c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "b754b2d0054328b3"
            ]
        ]
    },
    {
        "id": "b754b2d0054328b3",
        "type": "ui_template",
        "z": "ef09b2ee949083c7",
        "group": "368a548923a9a211",
        "name": "switch",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "var status = {{msg.payload}};",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 430,
        "y": 140,
        "wires": [
            [
                "190ebda3696e67ac"
            ]
        ]
    },
    {
        "id": "190ebda3696e67ac",
        "type": "ui_ui_control",
        "z": "ef09b2ee949083c7",
        "name": "",
        "x": 600,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "52d387075434ab0b",
        "type": "comment",
        "z": "ef09b2ee949083c7",
        "name": "Switches tabs for some reason",
        "info": "injecting payload is causing page to switch between ",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "de96c11163c680c1",
        "type": "inject",
        "z": "ef09b2ee949083c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "b754b2d0054328b3"
            ]
        ]
    },
    {
        "id": "44960a3a9b43846a",
        "type": "inject",
        "z": "ef09b2ee949083c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "b754b2d0054328b3"
            ]
        ]
    },
    {
        "id": "f9929356e7ed6f88",
        "type": "mqtt in",
        "z": "ef09b2ee949083c7",
        "name": "",
        "topic": "node/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "2fce7cb011bd49b7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 580,
        "wires": [
            [
                "ef1a0facdd2f26bd",
                "0f5cbd30bb03d32d"
            ]
        ]
    },
    {
        "id": "ef1a0facdd2f26bd",
        "type": "switch",
        "z": "ef09b2ee949083c7",
        "name": "Sort by topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "node/data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/azimuth",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/ponyexpress",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "node/temppress",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 390,
        "y": 560,
        "wires": [
            [
                "9fd537b470bfb122"
            ],
            [
                "d5c95e7b71942b0e"
            ],
            [
                "0dd1766dbb4fbcf2"
            ],
            [
                "2d22cfa77f550b68"
            ],
            [
                "d7af4ed6ebf2631c"
            ]
        ],
        "inputLabels": [
            "all JSON"
        ],
        "outputLabels": [
            "compass",
            "azimuth",
            "packet",
            "temppress",
            "all others"
        ]
    },
    {
        "id": "0f5cbd30bb03d32d",
        "type": "debug",
        "z": "ef09b2ee949083c7",
        "name": "node/#",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "_topic",
        "statusType": "msg",
        "x": 370,
        "y": 620,
        "wires": []
    },
    {
        "id": "6937f03083f7f7a2",
        "type": "ui_text",
        "z": "ef09b2ee949083c7",
        "group": "4788da44ae885d26",
        "order": 10,
        "width": 6,
        "height": 5,
        "name": "",
        "label": "Readout",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 660,
        "y": 780,
        "wires": []
    },
    {
        "id": "d7af4ed6ebf2631c",
        "type": "debug",
        "z": "ef09b2ee949083c7",
        "name": "NO MATCH FOUND",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 740,
        "wires": []
    },
    {
        "id": "2d22cfa77f550b68",
        "type": "csv",
        "z": "ef09b2ee949083c7",
        "name": "RemoteBMPParser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "bmpmillis,bmppacketnum,bmpwifirssi,temp-C,pressure-Pa,altitude-m",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 690,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0dd1766dbb4fbcf2",
        "type": "csv",
        "z": "ef09b2ee949083c7",
        "name": "Packet Parser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Loc,4300PacketNum,GroupID,UnitID,TempC,Voltage,RcvNoise,RcvRSSI,LastRSSI,LastNoise,GPS",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": true,
        "x": 700,
        "y": 600,
        "wires": [
            [
                "499fbb78e3e811db"
            ]
        ]
    },
    {
        "id": "d5c95e7b71942b0e",
        "type": "csv",
        "z": "ef09b2ee949083c7",
        "name": "AzimuthParser",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Azimuthmillis,Azimuth,MagnetStr",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 700,
        "y": 500,
        "wires": [
            [
                "296b50b83b734fc0"
            ]
        ]
    },
    {
        "id": "9fd537b470bfb122",
        "type": "json",
        "z": "ef09b2ee949083c7",
        "name": "Compass Parser",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 400,
        "wires": [
            [
                "1f9c8ba367612f51"
            ]
        ]
    },
    {
        "id": "7e09752296390048",
        "type": "link out",
        "z": "ef09b2ee949083c7",
        "name": "JSON_RemoteBMP_Raw",
        "mode": "link",
        "links": [],
        "x": 855,
        "y": 680,
        "wires": []
    },
    {
        "id": "782c09f905e468cc",
        "type": "link out",
        "z": "ef09b2ee949083c7",
        "name": "JSON_HealthPacket_Raw",
        "mode": "link",
        "links": [],
        "x": 855,
        "y": 580,
        "wires": []
    },
    {
        "id": "499fbb78e3e811db",
        "type": "debug",
        "z": "ef09b2ee949083c7",
        "name": "Packet Parsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 920,
        "y": 620,
        "wires": []
    },
    {
        "id": "522b8044d779fe5e",
        "type": "link out",
        "z": "ef09b2ee949083c7",
        "name": "JSON_Azimuth_Raw",
        "mode": "link",
        "links": [],
        "x": 855,
        "y": 480,
        "wires": []
    },
    {
        "id": "296b50b83b734fc0",
        "type": "debug",
        "z": "ef09b2ee949083c7",
        "name": "Azimuth Parsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 920,
        "y": 520,
        "wires": []
    },
    {
        "id": "6f88fed0285c9343",
        "type": "link out",
        "z": "ef09b2ee949083c7",
        "name": "JSON_Compass_Raw",
        "mode": "link",
        "links": [
            "352bec218510accb"
        ],
        "x": 855,
        "y": 380,
        "wires": []
    },
    {
        "id": "1f9c8ba367612f51",
        "type": "debug",
        "z": "ef09b2ee949083c7",
        "name": "Compass Parsed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "1e921026874406db",
        "type": "delay",
        "z": "ef09b2ee949083c7",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 940,
        "y": 120,
        "wires": [
            []
        ]
    }
]